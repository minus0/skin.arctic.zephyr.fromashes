<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="Furniture_Scrollbar">
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<centerright>60</centerright>
			<posy>PosterPad</posy>
			<height>PosterH</height>
			<width>8</width>
			<onleft>50</onleft>
			<onright condition="!Skin.HasSetting(global.kioskmode)">9000</onright>
			<!--Changed-->
         	<texturesliderbackground border="4" colordiffuse="$VAR[ScrollbarBGColour]">scrollbar/scrollv.png</texturesliderbackground> 
			<!--Changed-->
			<texturesliderbar border="4" colordiffuse="$VAR[ScrollbarUnFocusedColour]">scrollbar/scrollv.png</texturesliderbar>
			<!--Changed-->
			<texturesliderbarfocus border="4" colordiffuse="$VAR[ScrollbarFocusedColour]">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<animation effect="slide" end="100,0" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
		</control>
	</include>
	<include name="Furniture_Scrollbar_Horizontal">
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<left>SidePad</left>
			<width>1760</width>
			<bottom>200</bottom>
			<orientation>horizontal</orientation>
			<height>8</height>
			<onup>50</onup>
			<ondown condition="!Skin.HasSetting(global.kioskmode)">9000</ondown>
			<!--Changed-->
			<texturesliderbackground border="4" colordiffuse="$VAR[ScrollbarBGColour]">scrollbar/scrollv.png</texturesliderbackground>
			<!--Changed-->
			<texturesliderbar border="4" colordiffuse="$VAR[ScrollbarUnFocusedColour]">scrollbar/scrollv.png</texturesliderbar>
			<!--Changed-->
			<texturesliderbarfocus border="4" colordiffuse="$VAR[ScrollbarFocusedColour]">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
		</control>
	</include>	
							
	<include name="Furniture_ButtonBack">
		<width>64</width>
		<height>64</height>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="75" end="100" center="auto" time="200" />
		</animation>
	</include>
	<include name="Furniture_ButtonBack_Circle">
		<width>64</width>
		<height>64</height>
		<texture colordiffuse="Dark1">common/circle.png</texture>
	</include>
	<!-- Flags -->
	<variable name="Flagstar1">
		<value condition="IntegerGreaterThan(ListItem.Rating,1)">star10</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,0)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="Flagstar2">
		<value condition="IntegerGreaterThan(ListItem.Rating,3)">star10</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,2)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="Flagstar3">
		<value condition="IntegerGreaterThan(ListItem.Rating,5)">star10</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,4)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="Flagstar4">
		<value condition="IntegerGreaterThan(ListItem.Rating,7)">star10</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,6)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="Flagstar5">
		<value condition="IntegerGreaterThan(ListItem.Rating,9)">star10</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,8)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar1">
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,1)">star10</value>
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,0)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar2">
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,3)">star10</value>
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,2)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar3">
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,5)">star10</value>
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,4)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar4">
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,7)">star10</value>
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,6)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar5">
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,9)">star10</value>
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,8)">star5</value>
		<value>star0</value>
	</variable>
	<!-- MusicFlags -->
	<variable name="MusicFlagstar5">
		<value condition="StringCompare(ListItem.StarRating,rating5.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="MusicFlagstar4">
		<value condition="StringCompare(ListItem.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating4.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="MusicFlagstar3">
		<value condition="StringCompare(ListItem.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating4.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating3.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="MusicFlagstar2">
		<value condition="StringCompare(ListItem.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating4.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating3.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating2.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="MusicFlagstar1">
		<value condition="StringCompare(ListItem.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating4.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating3.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating2.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating1.png)">star10</value>
		<value>star0</value>
	</variable>
	<!-- MusicOSDFlags -->
	<variable name="OSDMusicFlagstar5">
		<value condition="StringCompare(Player.StarRating,rating5.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="OSDMusicFlagstar4">
		<value condition="StringCompare(Player.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating4.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="OSDMusicFlagstar3">
		<value condition="StringCompare(Player.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating4.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating3.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="OSDMusicFlagstar2">
		<value condition="StringCompare(Player.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating4.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating3.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating2.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="OSDMusicFlagstar1">
		<value condition="StringCompare(Player.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating4.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating3.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating2.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating1.png)">star10</value>
		<value>star0</value>
	</variable>
	
	<variable name="ClearLogoTopVar">
        <value condition="!IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!IsEmpty(Container(9500).ListItem.Art(clearlogo))">$INFO[Container(9500).ListItem.Art(clearlogo)]</value>
        <value condition="!IsEmpty(Container(9500).ListItem.Art(tvshow.clearlogo))">$INFO[Container(9500).ListItem.Art(tvshow.clearlogo)]</value>
    </variable>
	
	<include name="Furniture_Flags">
		<control type="grouplist">
			<visible>!Skin.HasSetting(furniture.flags)</visible>
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) + !Window.IsVisible(script-ExtendedInfo Script-YoutubeList.xml)</visible>
			<visible>Container.Content(movies) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)</visible>
			<visible>!stringcompare(ListItem.Label,..)</visible>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<left>SidePad</left>
			<centerbottom>NavBarPad</centerbottom>
			<width>1920</width>
			<height>120</height>
			<orientation>horizontal</orientation>
			<align>left</align>
			<itemgap>10</itemgap>
			<usecontrolcoords>true</usecontrolcoords>
			<control type="group">
				<centertop>50%</centertop>
				<width>73</width>
				<height>50</height>
				<control type="image" description="button back">
					<width>73</width>
					<height>50</height>
					<texture colordiffuse="Dark1">common/cadre.png</texture>
				</control>
				<control type="label">
					<width>73</width>
					<height>46</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>$VAR[HDSD]</label>
					<font>FlagHD</font>
					<textcolor>Dark1</textcolor>
					<visible>!substring(ListItem.Path,videodb://movies/sets,left) + !Skin.HasSetting(furniture.flags.colour)</visible>
				</control>
				<control type="label">
					<width>73</width>
					<height>46</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>$VAR[HDSD]</label>
					<font>FlagHD</font>
					<textcolor>$VAR[ColourHighlight2]</textcolor>
					<visible>!substring(ListItem.Path,videodb://movies/sets,left) + Skin.HasSetting(furniture.flags.colour)</visible>
				</control>
				<control type="image">
					<width>73</width>
					<height>50</height>
					<centertop>50%</centertop>
					<texture colordiffuse="Dark1">flags/sets.png</texture>
					<visible>substring(ListItem.Path,videodb://movies/sets,left)</visible>
				</control>
			</control>
			<control type="image">
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[Flagstar1].png</texture>
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="$VAR[ColourHighlight]">flags/$VAR[Flagstar1].png</texture>
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[Flagstar2].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="$VAR[ColourHighlight]">flags/$VAR[Flagstar2].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[Flagstar3].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="$VAR[ColourHighlight]">flags/$VAR[Flagstar3].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[Flagstar4].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="$VAR[ColourHighlight]">flags/$VAR[Flagstar4].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[Flagstar5].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="$VAR[ColourHighlight]">flags/$VAR[Flagstar5].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="label">
				<left>-16</left>
				<width min="48">auto</width>
				<centertop>50%</centertop>
				<height>64</height>
				<align>left</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Rating]</label>
				<font>Flag</font>
				<textcolor>Dark1</textcolor>
				<visible>Skin.HasSetting(furniture.numericrating)</visible>
			</control>
			<control type="image">
				<width>48</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/airing.png</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>Container.Content(tvshows) | Container.Content(seasons)</visible>
			</control>
			<control type="label">
				<width min="128">auto</width>
				<centertop>50%</centertop>
				<height>64</height>
				<align>left</align>
				<aligny>center</aligny>
				<label>$VAR[LabelNextAiredDetails]</label>
				<font>Flag</font>
				<textcolor>Dark2</textcolor>
				<visible>Container.Content(tvshows) | Container.Content(seasons)</visible>
			</control>
			<!-- sets -->
			<control type="image">
				<width>120</width>
				<height>120</height>
				<centertop>50%</centertop>
				<texture>$INFO[Window(home).Property(Set.Movie.1.Art(discart))]</texture>
				<visible>!IsEmpty(Window(home).Property(Set.Movie.1.Art(discart)))</visible>
			</control>
			<control type="image">
				<width>120</width>
				<height>120</height>
				<centertop>50%</centertop>
				<texture>$INFO[Window(home).Property(Set.Movie.2.Art(discart))]</texture>
				<visible>!IsEmpty(Window(home).Property(Set.Movie.2.Art(discart)))</visible>
			</control>
			<control type="image">
				<width>120</width>
				<height>120</height>
				<centertop>50%</centertop>
				<texture>$INFO[Window(home).Property(Set.Movie.3.Art(discart))]</texture>
				<visible>!IsEmpty(Window(home).Property(Set.Movie.3.Art(discart)))</visible>
			</control>
			<control type="image">
				<width>120</width>
				<height>120</height>
				<centertop>50%</centertop>
				<texture>$INFO[Window(home).Property(Set.Movie.4.Art(discart))]</texture>
				<visible>!IsEmpty(Window(home).Property(Set.Movie.4.Art(discart)))</visible>
			</control>
			<control type="image">
				<width>120</width>
				<height>120</height>
				<centertop>50%</centertop>
				<texture>$INFO[Window(home).Property(Set.Movie.5.Art(discart))]</texture>
				<visible>!IsEmpty(Window(home).Property(Set.Movie.5.Art(discart)))</visible>
			</control>
			<control type="image">
				<width>120</width>
				<height>120</height>
				<centertop>50%</centertop>
				<texture>$INFO[Window(home).Property(Set.Movie.6.Art(discart))]</texture>
				<visible>!IsEmpty(Window(home).Property(Set.Movie.6.Art(discart)))</visible>
			</control>
			<control type="image">
				<width>120</width>
				<height>120</height>
				<centertop>50%</centertop>
				<texture>$INFO[Window(home).Property(Set.Movie.7.Art(discart))]</texture>
				<visible>!IsEmpty(Window(home).Property(Set.Movie.7.Art(discart)))</visible>
			</control>
			<control type="image">
				<width>120</width>
				<height>120</height>
				<centertop>50%</centertop>
				<texture>$INFO[Window(home).Property(Set.Movie.8.Art(discart))]</texture>
				<visible>!IsEmpty(Window(home).Property(Set.Movie.8.Art(discart)))</visible>
			</control>
			<include>lib_Rating_TV</include>
			<include condition="IsEmpty(Skin.String(RatingCountry))">lib_Rating_BBFC</include>
			<include condition="Stringcompare(Skin.String(RatingCountry),US)">lib_Rating_MPAA</include>
			<include condition="Stringcompare(Skin.String(RatingCountry),UK)">lib_Rating_BBFC</include>
			<include condition="Stringcompare(Skin.String(RatingCountry),Germany)">lib_Rating_FSK</include>
			<include condition="Stringcompare(Skin.String(RatingCountry),NL)">lib_Rating_NL</include>
			<control type="image">
				<width>108</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[ListItem.VideoAspect,flags/aspectratio/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!IsEmpty(ListItem.VideoAspect) + !Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>110</width>
				<height>60</height>
				<centertop>51%</centertop>
				<texture>$INFO[ListItem.VideoAspect,colored/aspectratio/,.png]</texture>
				<aspectratio align="center">stretch</aspectratio>
				<visible>!IsEmpty(ListItem.VideoAspect) + Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[ListItem.VideoResolution,flags/resolution/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!IsEmpty(ListItem.VideoResolution) + !Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>110</width>
				<height>60</height>
				<centertop>51%</centertop>
				<texture>$INFO[ListItem.VideoResolution,colored/resolution/,.png]</texture>
				<aspectratio align="left">stretch</aspectratio>
				<visible>!IsEmpty(ListItem.VideoResolution) + Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[ListItem.VideoCodec,flags/video/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!IsEmpty(ListItem.VideoCodec) + !Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>110</width>
				<height>62</height>
				<centertop>51%</centertop>
				<texture>$INFO[ListItem.VideoCodec,colored/source/,.png]</texture>
				<aspectratio align="left">stretch</aspectratio>
				<visible>!IsEmpty(ListItem.VideoCodec) + Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[ListItem.AudioCodec,flags/audio/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!IsEmpty(ListItem.AudioCodec) + !Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>72</height>
				<centertop>51%</centertop>
				<texture>$INFO[ListItem.AudioCodec,colored/audio/,.png]</texture>
				<aspectratio align="left">stretch</aspectratio>
				<visible>!IsEmpty(ListItem.AudioCodec) + Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[ListItem.AudioChannels,flags/channels/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!IsEmpty(ListItem.AudioChannels) + !Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>110</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture>$INFO[ListItem.AudioChannels,colored/channels/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!IsEmpty(ListItem.AudioChannels) + Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="group">
				<centertop>50%</centertop>
				<width>220</width>
				<height>64</height>
				<visible>!IsEmpty(ListItem.Duration) + !Skin.HasSetting(furniture.flags.colour)</visible>
				<control type="image">
					<height>50</height>
					<centertop>50%</centertop>
					<texture colordiffuse="Dark1">flags/time.png</texture>
					<aspectratio align="left">keep</aspectratio>
					<visible>!IsEmpty(ListItem.Duration) + [Control.IsVisible(500) | Control.IsVisible(503) | Control.IsVisible(505) | Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(54) | Control.IsVisible(57) | Control.IsVisible(58) | Control.IsVisible(53) | Control.IsVisible(52) | Control.IsVisible(56) | Control.IsVisible(55) | Control.IsVisible(513) | Control.IsVisible(514) | Control.IsVisible(59) | Control.IsVisible(515) | Control.IsVisible(155) | Control.IsVisible(156) | [Control.IsVisible(56) + Skin.HasSetting(56media.showinfo) + !Skin.HasSetting(56media.low)]]</visible>
				</control>
				<control type="label">
					<left>57</left>
					<width>170</width>
					<centertop>50%</centertop>
					<height>64</height>
					<align>left</align>
					<aligny>center</aligny>
					<label>$VAR[DurationLong]</label>
					<font>DurationFontSmall</font>
					<textcolor>Dark1</textcolor>
					<visible>!IsEmpty(ListItem.Duration) + [Control.IsVisible(500) | Control.IsVisible(503) | Control.IsVisible(505) | Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(54) | Control.IsVisible(57) | Control.IsVisible(58) | Control.IsVisible(53) | Control.IsVisible(52) | Control.IsVisible(56) | Control.IsVisible(55) | Control.IsVisible(513) | Control.IsVisible(514) | Control.IsVisible(59) | Control.IsVisible(515) | Control.IsVisible(155) | Control.IsVisible(156) | [Control.IsVisible(56) + Skin.HasSetting(56media.showinfo) + !Skin.HasSetting(56media.low)]]</visible>
				</control>
			</control>
			<control type="group">
				<centertop>52%</centertop>
				<width>230</width>
				<height>50</height>
				<visible>!IsEmpty(ListItem.Duration) + Skin.HasSetting(furniture.flags.colour)</visible>
				<control type="label">
					<left>0</left>
					<width>230</width>
					<centertop>50%</centertop>
					<height>50</height>
					<align>left</align>
					<aligny>center</aligny>
					<label>$VAR[DurationLong]</label>
					<font>DurationFontSmall</font>
					<textcolor>$VAR[ColourHighlight]</textcolor>
					<visible>!IsEmpty(ListItem.Duration) + [Control.IsVisible(500) | Control.IsVisible(503) | Control.IsVisible(505) | Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(54) | Control.IsVisible(57) | Control.IsVisible(58) | Control.IsVisible(53) | Control.IsVisible(52) | Control.IsVisible(56) | Control.IsVisible(55) | Control.IsVisible(513) | Control.IsVisible(514) | Control.IsVisible(59) | Control.IsVisible(515) | Control.IsVisible(155) | Control.IsVisible(156) | [Control.IsVisible(56) + Skin.HasSetting(56media.showinfo) + !Skin.HasSetting(56media.low)]]</visible>
				</control>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/3D.png</texture>
				<visible>ListItem.IsStereoscopic</visible>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/bluray.png</texture>
				<visible>[substring(ListItem.FilenameAndPath,bluray) | substring(ListItem.FilenameAndPath,bdrip) | substring(ListItem.FilenameAndPath,bd25) | substring(ListItem.FilenameAndPath,bd50)]</visible>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/hddvd.png</texture>
				<visible>substring(ListItem.FilenameAndPath,hddvd)</visible>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/dvd.png</texture>
				<visible>substring(ListItem.FilenameAndPath,dvd) + !substring(ListItem.FilenameAndPath,hddvd)</visible>
			</control>
			<control type="group">
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
				<centertop>70%</centertop>
				<height>120</height>
				<width>64</width>
				<control type="image">
					<width>73</width>
					<height>55</height>
					<texture colordiffuse="Dark1">flags/imdb.png</texture>
					<visible>!IsEmpty(ListItem.Top250)</visible>
				</control>
				<control type="label">
					<top>24</top>
					<width>auto</width>
					<font>Flag</font>
					<align>center</align>
					<textcolor>Black700</textcolor>
					<label>$INFO[ListItem.Top250,#,]</label>
					<visible>!IsEmpty(ListItem.Top250)</visible>
				</control>
			</control>
			<control type="group">
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
				<centertop>72%</centertop>
				<height>120</height>
				<width>64</width>
				<control type="image">
					<width>73</width>
					<height>55</height>
					<texture>views/imdbtop250.png</texture>
					<visible>!IsEmpty(ListItem.Top250)</visible>
					<aspectratio>keep</aspectratio>
				</control>
				<control type="label">
					<top>24</top>
					<width>auto</width>
					<font>Flag</font>
					<align>center</align>
					<textcolor>fff3ce13</textcolor>
					<label>$INFO[ListItem.Top250,#,]</label>
					<visible>!IsEmpty(ListItem.Top250)</visible>
				</control>
			</control>
		</control>
		<control type="group">
			<visible>!Skin.HasSetting(furniture.flags)</visible>
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>
			<visible>Container.Content(movies) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)</visible>
			<visible>!stringcompare(ListItem.Label,..)</visible>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<left>SidePad</left>
			<centerbottom>60</centerbottom>
			<width>1920</width>
			<height>120</height>
			<align>left</align>
			<control type="image">
				<left>-15</left>
				<centertop>50%</centertop>
				<width>104</width>
				<height>104</height>
				<texture colordiffuse="Dark1">$VAR[Studio]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<left>-15</left>
				<centertop>50%</centertop>
				<width>104</width>
				<height>104</height>
				<texture>$VAR[Studio]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
		</control>
	</include>
	<include name="Furniture_Hub_Flags">
		<control type="grouplist">
			<visible>!Skin.HasSetting(furniture.flags)</visible>
			<visible>Container.Content(movies) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)</visible>
			<visible>!stringcompare(ListItem.Label,..)</visible>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<left>SidePad</left>
			<centerbottom>NavBarPad</centerbottom>
			<width>1400</width>
			<height>120</height>
			<orientation>horizontal</orientation>
			<align>left</align>
			<itemgap>24</itemgap>
			<usecontrolcoords>true</usecontrolcoords>
			<control type="group">
				<centertop>50%</centertop>
				<width>73</width>
				<height>50</height>
				<control type="image" description="button back">
					<width>73</width>
					<height>50</height>
					<texture colordiffuse="Dark1">common/cadre.png</texture>
				</control>
				<control type="label">
					<width>73</width>
					<height>46</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>$VAR[HDSD]</label>
					<font>FlagHD</font>
					<textcolor>Dark1</textcolor>
					<visible>!substring(ListItem.Path,videodb://movies/sets,left)</visible>
				</control>
				<control type="image">
					<width>73</width>
					<height>50</height>
					<centertop>50%</centertop>
					<texture colordiffuse="Dark1">flags/sets.png</texture>
					<visible>substring(ListItem.Path,videodb://movies/sets,left)</visible>
				</control>
			</control>
			<control type="image">
				<width>48</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/airing.png</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>Container.Content(tvshows) | Container.Content(seasons)</visible>
			</control>
			<control type="label">
				<width min="128">auto</width>
				<centertop>50%</centertop>
				<height>64</height>
				<align>left</align>
				<aligny>center</aligny>
				<label>$VAR[LabelNextAiredDetails]</label>
				<font>Flag</font>
				<textcolor>Dark2</textcolor>
				<visible>Container.Content(tvshows) | Container.Content(seasons)</visible>
			</control>
			<control type="image">
				<width>108</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[ListItem.VideoAspect,flags/aspectratio/,.png]</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>!IsEmpty(ListItem.VideoAspect)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[ListItem.VideoResolution,flags/resolution/,.png]</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>!IsEmpty(ListItem.VideoResolution)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[ListItem.VideoCodec,flags/video/,.png]</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>!IsEmpty(ListItem.VideoCodec)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<texture colordiffuse="Black700">$INFO[ListItem.AudioCodec,flags/audio/,.png]</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>!IsEmpty(ListItem.AudioCodec)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<texture colordiffuse="Black700">flags/audio/dts.png]</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>!IsEmpty(ListItem.AudioCodec) + SubString(ListItem.AudioCodec,dts) + !SubString(ListItem.AudioCodec,dtshd_hra) + !SubString(ListItem.AudioCodec,dtshd_ma) + !SubString(ListItem.AudioCodec,dtshdma)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[ListItem.AudioChannels,flags/channels/,.png]</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>!IsEmpty(ListItem.AudioChannels)</visible>
			</control>
			<control type="group">
				<centertop>50%</centertop>
				<width>220</width>
				<height>50</height>
				<control type="image">
					<width>220</width>
					<height>50</height>
					<centertop>50%</centertop>
					<texture colordiffuse="Dark1">flags/time.png</texture>
					<aspectratio align="left">scale</aspectratio>
					<visible>!IsEmpty(ListItem.Duration) + [Control.IsVisible(500) | Control.IsVisible(503) | Control.IsVisible(505) | Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(54) | Control.IsVisible(57) | Control.IsVisible(58) | Control.IsVisible(53) | Control.IsVisible(52) | Control.IsVisible(56) | Control.IsVisible(55) | [Control.IsVisible(56) + Skin.HasSetting(56media.showinfo) + !Skin.HasSetting(56media.low)]]</visible>
				</control>
				<control type="label">
					<left>55</left>
					<width>165</width>
					<centertop>50%</centertop>
					<height>50</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Duration,, $LOCALIZE[31102] ]</label>
					<font>FlagHD</font>
					<textcolor>Dark1</textcolor>
					<visible>!IsEmpty(ListItem.Duration) + [Control.IsVisible(500) | Control.IsVisible(503) | Control.IsVisible(505) | Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(54) | Control.IsVisible(57) | Control.IsVisible(58) | Control.IsVisible(53) | Control.IsVisible(52) | Control.IsVisible(56) | Control.IsVisible(55) | [Control.IsVisible(56) + Skin.HasSetting(56media.showinfo) + !Skin.HasSetting(56media.low)]]</visible>
				</control>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/3D.png</texture>
				<visible>ListItem.IsStereoscopic</visible>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/bluray.png</texture>
				<visible>[substring(ListItem.FilenameAndPath,bluray) | substring(ListItem.FilenameAndPath,bdrip) | substring(ListItem.FilenameAndPath,bd25) | substring(ListItem.FilenameAndPath,bd50)]</visible>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/hddvd.png</texture>
				<visible>substring(ListItem.FilenameAndPath,hddvd)</visible>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/dvd.png</texture>
				<visible>substring(ListItem.FilenameAndPath,dvd) + !substring(ListItem.FilenameAndPath,hddvd)</visible>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/imdb.png</texture>
				<visible>!IsEmpty(ListItem.Top250)</visible>
			</control>
		</control>
	</include>
	<include name="Furniture_Logo">
		<control type="group">
			<visible>Skin.HasSetting(furniture.logo)</visible>
			<visible>!Player.HasMedia</visible>
			<visible>!Control.HasFocus(515)</visible>
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)</visible>
			<visible>Container.Content(movies) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)</visible>
			<left>1622</left>
			<top>19</top>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<control type="image">
				<width>258</width>
				<height>130</height>
				<texture>$VAR[ClearLogo]</texture>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				<animation effect="rotate" end="10" center="auto" condition="true" time="200">conditional</animation>
			</control>
			<control type="textbox">
				<width>258</width>
				<height>130</height>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$VAR[ColourHighlight]</textcolor>
				<shadowcolor>Black</shadowcolor>
				<font>font_SimplerE3D_bold</font>
				<label>[B]$VAR[BottomClearLogoText][/B]</label>
				<visible>Skin.HasSetting(furniture.logo.fake)</visible>
				<visible>[Container.Content(movies) | Container.Content(sets) + IsEmpty(ListItem.Art(clearlogo))] | [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) + IsEmpty(ListItem.Art(tvshow.clearlogo))]</visible>
				<visible>[IsEmpty(ListItem.Art(clearlogo)) + IsEmpty(ListItem.Art(tvshow.clearlogo))] + [SubString(ListItem.Title,a,Left) | SubString(ListItem.Title,b,Left) | SubString(ListItem.Title,c,Left) | SubString(ListItem.Title,d,Left)]</visible>
				<animation effect="rotate" end="15" center="auto" condition="true" time="200">conditional</animation>
			</control>
			<control type="textbox">
				<width>258</width>
				<height>130</height>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$VAR[ColourHighlight]</textcolor>
				<shadowcolor>Black</shadowcolor>
				<font>font_armyofdarkness</font>
				<label>[B]$VAR[BottomClearLogoText][/B]</label>
				<visible>Skin.HasSetting(furniture.logo.fake)</visible>
				<visible>[Container.Content(movies) | Container.Content(sets) + IsEmpty(ListItem.Art(clearlogo))] | [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) + IsEmpty(ListItem.Art(tvshow.clearlogo))]</visible>
				<visible>[IsEmpty(ListItem.Art(clearlogo)) + IsEmpty(ListItem.Art(tvshow.clearlogo))]+ [SubString(ListItem.Title,e,Left) | SubString(ListItem.Title,f,Left) | SubString(ListItem.Title,g,Left) | SubString(ListItem.Title,h,Left)]</visible>
				<animation effect="rotate" end="15" center="auto" condition="true" time="200">conditional</animation>
			</control>
			<control type="textbox">
				<width>258</width>
				<height>130</height>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$VAR[ColourHighlight]</textcolor>
				<shadowcolor>Black</shadowcolor>
				<font>font_babylon5</font>
				<label>[B]$VAR[BottomClearLogoText][/B]</label>
				<visible>Skin.HasSetting(furniture.logo.fake)</visible>
				<visible>[Container.Content(movies) | Container.Content(sets) + IsEmpty(ListItem.Art(clearlogo))] | [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) + IsEmpty(ListItem.Art(tvshow.clearlogo))]</visible>
				<visible>[IsEmpty(ListItem.Art(clearlogo)) + IsEmpty(ListItem.Art(tvshow.clearlogo))] + [SubString(ListItem.Title,i,Left) | SubString(ListItem.Title,j,Left) | SubString(ListItem.Title,k,Left) | SubString(ListItem.Title,l,Left)]</visible>
				<animation effect="rotate" end="15" center="auto" condition="true" time="200">conditional</animation>
			</control>
			<control type="textbox">
				<width>258</width>
				<height>130</height>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$VAR[ColourHighlight]</textcolor>
				<shadowcolor>Black</shadowcolor>
				<font>font_bachelorpad</font>
				<label>[B]$VAR[BottomClearLogoText][/B]</label>
				<visible>Skin.HasSetting(furniture.logo.fake)</visible>
				<visible>[Container.Content(movies) | Container.Content(sets) + IsEmpty(ListItem.Art(clearlogo))] | [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) + IsEmpty(ListItem.Art(tvshow.clearlogo))]</visible>
				<visible>[IsEmpty(ListItem.Art(clearlogo)) + IsEmpty(ListItem.Art(tvshow.clearlogo))] + [SubString(ListItem.Title,m,Left) | SubString(ListItem.Title,n,Left) | SubString(ListItem.Title,o,Left) | SubString(ListItem.Title,p,Left)]</visible>
				<animation effect="rotate" end="15" center="auto" condition="true" time="200">conditional</animation>
			</control>
			<control type="textbox">
				<width>258</width>
				<height>130</height>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$VAR[ColourHighlight]</textcolor>
				<shadowcolor>Black</shadowcolor>
				<font>font_bullpen3d</font>
				<label>[B]$VAR[BottomClearLogoText][/B]</label>
				<visible>Skin.HasSetting(furniture.logo.fake)</visible>
				<visible>[Container.Content(movies) | Container.Content(sets) + IsEmpty(ListItem.Art(clearlogo))] | [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) + IsEmpty(ListItem.Art(tvshow.clearlogo))]</visible>
				<visible>[IsEmpty(ListItem.Art(clearlogo)) + IsEmpty(ListItem.Art(tvshow.clearlogo))] + [SubString(ListItem.Title,q,Left) | SubString(ListItem.Title,r,Left) | SubString(ListItem.Title,s,Left) | SubString(ListItem.Title,t,Left)]</visible>
				<animation effect="rotate" end="15" center="auto" condition="true" time="200">conditional</animation>
			</control>
			<control type="textbox">
				<width>258</width>
				<height>130</height>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$VAR[ColourHighlight]</textcolor>
				<shadowcolor>Black</shadowcolor>
				<font>font_terminator</font>
				<label>[B]$VAR[BottomClearLogoText][/B]</label>
				<visible>Skin.HasSetting(furniture.logo.fake)</visible>
				<visible>[Container.Content(movies) | Container.Content(sets) + IsEmpty(ListItem.Art(clearlogo))] | [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) + IsEmpty(ListItem.Art(tvshow.clearlogo))]</visible>
				<visible>[IsEmpty(ListItem.Art(clearlogo)) + IsEmpty(ListItem.Art(tvshow.clearlogo))] + [SubString(ListItem.Title,u,Left) | SubString(ListItem.Title,v,Left) | SubString(ListItem.Title,w,Left) | SubString(ListItem.Title,x,Left) | SubString(ListItem.Title,y,Left) | SubString(ListItem.Title,z,Left)]</visible>
				<animation effect="rotate" end="15" center="auto" condition="true" time="200">conditional</animation>
			</control>
		</control>
		<control type="group">
			<visible>Skin.HasSetting(furniture.logo)</visible>
			<visible>!Window.IsVisible(DialogAlbumInfo.xml)</visible>
			<visible>!Player.HasMedia</visible>
			<visible>Container.Content(albums) | Container.Content(artists) | Container.Content(songs)</visible>
			<left>1622</left>
			<top>19</top>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<control id="8308" type="image">
				<width>258</width>
				<height>130</height>
				<texture fallback="empty.png">$VAR[MusicClearLogo]</texture>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				<animation effect="rotate" end="10" center="auto" condition="true" time="200">conditional</animation>
				<visible>Skin.HasSetting(furniture.logo) + !IsEmpty(Skin.String(cdartlocation))</visible>
			</control>
			<control type="textbox">
				<width>258</width>
				<height>130</height>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$VAR[ColourHighlight]</textcolor>
				<shadowcolor>Black</shadowcolor>
				<font>font_SimplerE3D_bold</font>
				<label>[B]$VAR[BottomClearLogoText][/B]</label>
				<visible>Skin.HasSetting(furniture.logo.fake)</visible>
				<visible>Skin.HasSetting(furniture.logo) + Substring(Control.GetLabel(8308),empty.png)</visible>
				<visible>[IsEmpty(ListItem.Art(clearlogo)) + IsEmpty(ListItem.Art(tvshow.clearlogo))] + [SubString(ListItem.Title,a,Left) | SubString(ListItem.Title,b,Left) | SubString(ListItem.Title,c,Left) | SubString(ListItem.Title,d,Left)]</visible>
				<animation effect="rotate" end="15" center="auto" condition="true" time="200">conditional</animation>
			</control>
			<control type="textbox">
				<width>258</width>
				<height>130</height>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$VAR[ColourHighlight]</textcolor>
				<shadowcolor>Black</shadowcolor>
				<font>font_armyofdarkness</font>
				<label>[B]$VAR[BottomClearLogoText][/B]</label>
				<visible>Skin.HasSetting(furniture.logo) + Substring(Control.GetLabel(8308),empty.png)</visible>
				<visible>Skin.HasSetting(furniture.logo.fake)</visible>
				<visible>[IsEmpty(ListItem.Art(clearlogo)) + IsEmpty(ListItem.Art(tvshow.clearlogo))]+ [SubString(ListItem.Title,e,Left) | SubString(ListItem.Title,f,Left) | SubString(ListItem.Title,g,Left) | SubString(ListItem.Title,h,Left)]</visible>
				<animation effect="rotate" end="15" center="auto" condition="true" time="200">conditional</animation>
			</control>
			<control type="textbox">
				<width>258</width>
				<height>130</height>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$VAR[ColourHighlight]</textcolor>
				<shadowcolor>Black</shadowcolor>
				<font>font_babylon5</font>
				<label>[B]$VAR[BottomClearLogoText][/B]</label>
				<visible>Skin.HasSetting(furniture.logo) + Substring(Control.GetLabel(8308),empty.png)</visible>
				<visible>Skin.HasSetting(furniture.logo.fake)</visible>
				<visible>[IsEmpty(ListItem.Art(clearlogo)) + IsEmpty(ListItem.Art(tvshow.clearlogo))] + [SubString(ListItem.Title,i,Left) | SubString(ListItem.Title,j,Left) | SubString(ListItem.Title,k,Left) | SubString(ListItem.Title,l,Left)]</visible>
				<animation effect="rotate" end="15" center="auto" condition="true" time="200">conditional</animation>
			</control>
			<control type="textbox">
				<width>258</width>
				<height>130</height>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$VAR[ColourHighlight]</textcolor>
				<shadowcolor>Black</shadowcolor>
				<font>font_bachelorpad</font>
				<label>[B]$VAR[BottomClearLogoText][/B]</label>
				<visible>Skin.HasSetting(furniture.logo) + Substring(Control.GetLabel(8308),empty.png)</visible>
				<visible>Skin.HasSetting(furniture.logo.fake)</visible>
				<visible>[IsEmpty(ListItem.Art(clearlogo)) + IsEmpty(ListItem.Art(tvshow.clearlogo))] + [SubString(ListItem.Title,m,Left) | SubString(ListItem.Title,n,Left) | SubString(ListItem.Title,o,Left) | SubString(ListItem.Title,p,Left)]</visible>
				<animation effect="rotate" end="15" center="auto" condition="true" time="200">conditional</animation>
			</control>
			<control type="textbox">
				<width>258</width>
				<height>130</height>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$VAR[ColourHighlight]</textcolor>
				<shadowcolor>Black</shadowcolor>
				<font>font_bullpen3d</font>
				<label>[B]$VAR[BottomClearLogoText][/B]</label>
				<visible>Skin.HasSetting(furniture.logo) + Substring(Control.GetLabel(8308),empty.png)</visible>
				<visible>Skin.HasSetting(furniture.logo.fake)</visible>
				<visible>[IsEmpty(ListItem.Art(clearlogo)) + IsEmpty(ListItem.Art(tvshow.clearlogo))] + [SubString(ListItem.Title,q,Left) | SubString(ListItem.Title,r,Left) | SubString(ListItem.Title,s,Left) | SubString(ListItem.Title,t,Left)]</visible>
				<animation effect="rotate" end="15" center="auto" condition="true" time="200">conditional</animation>
			</control>
			<control type="textbox">
				<width>258</width>
				<height>130</height>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$VAR[ColourHighlight]</textcolor>
				<shadowcolor>Black</shadowcolor>
				<font>font_terminator</font>
				<label>[B]$VAR[BottomClearLogoText][/B]</label>
				<visible>Skin.HasSetting(furniture.logo) + Substring(Control.GetLabel(8308),empty.png)</visible>
				<visible>Skin.HasSetting(furniture.logo.fake)</visible>
				<visible>[IsEmpty(ListItem.Art(clearlogo)) + IsEmpty(ListItem.Art(tvshow.clearlogo))] + [SubString(ListItem.Title,u,Left) | SubString(ListItem.Title,v,Left) | SubString(ListItem.Title,w,Left) | SubString(ListItem.Title,x,Left) | SubString(ListItem.Title,y,Left) | SubString(ListItem.Title,z,Left)]</visible>
				<animation effect="rotate" end="15" center="auto" condition="true" time="200">conditional</animation>
			</control>
		</control>
	</include>			
	<variable name="HeaderIcon">
		<value condition="Window.IsVisible(DialogMuteBug.xml)">special://skin/extras/icons/mute.png</value>
		<value condition="Window.IsVisible(DialogButtonMenu.xml)">special://skin/extras/icons/power.png</value>
		<value condition="Window.IsVisible(DialogFavourites.xml)">special://skin/extras/icons/favourites.png</value>
		<value condition="Window.IsVisible(1101)">special://skin/extras/icons/film.png</value>
		<value condition="Window.IsVisible(1102)">special://skin/extras/icons/tv.png</value>
		<value condition="Window.IsVisible(1103) | Window.IsVisible(1104) | Window.IsVisible(1105)">special://skin/extras/icons/director.png</value>
		<value condition="Player.HasAudio + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]">special://skin/extras/icons/songs.png</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(livetv) + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]">special://skin/extras/icons/livetv.png</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(movies) + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]">special://skin/extras/icons/film.png</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(episodes) + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]">special://skin/extras/icons/tv.png</value>
		<value condition="Player.HasVideo + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]">special://skin/extras/icons/eye.png</value>
		<value condition="Window.IsVisible(script-ExtendedInfo Script-YoutubeList.xml)">special://skin/extras/icons/youtube.png</value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)">special://skin/extras/icons/info.png</value>
		<value condition="SubString(Container.FolderPath,sources://,Left)">special://skin/extras/icons/files.png</value>
		<value condition="SubString(Container.FolderPath,special://videoplaylists/,Left)">special://skin/extras/icons/playlist.png</value>
		<value condition="StringCompare(Container.FolderPath,special://profile/playlists/)">special://skin/extras/icons/playlist.png</value>
		<value condition="StringCompare(Container.FolderPath,special://profile/playlists/video/)">special://skin/extras/icons/playlist.png</value>
		<value condition="StringCompare(Container.FolderPath,special://profile/playlists/music/)">special://skin/extras/icons/playlist.png</value>
		<value condition="StringCompare(Container.FolderPath,special://profile/playlists/mixed/)">special://skin/extras/icons/playlist.png</value>
		<value condition="Window.IsVisible(MyMusicPlaylistEditor.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyMusicSongs.xml)">special://skin/extras/icons/songs.png</value>
		<value condition="SubString(Container.FolderPath,library://video/movies/,Left)">special://skin/extras/icons/film.png</value>
		<value condition="SubString(Container.FolderPath,library://video/tvshows/,Left)">special://skin/extras/icons/tv.png</value>
		<value condition="SubString(Container.FolderPath,videodb://movies/,Left)">special://skin/extras/icons/film.png</value>
		<value condition="SubString(Container.FolderPath,videodb://tvshows/,Left)">special://skin/extras/icons/tv.png</value>
		<value condition="SubString(Container.FolderPath,plugin://,Left)">special://skin/extras/icons/video-addons.png</value>
		<value condition="Container.Content(movies)">special://skin/extras/icons/film.png</value>
		<value condition="Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)">special://skin/extras/icons/tv.png</value>
		<value condition="Container.Content(songs)">special://skin/extras/icons/songs.png</value>
		<value condition="Container.Content(livetv)">special://skin/extras/icons/livetv.png</value>
		<value condition="Container.Content(files)">special://skin/extras/icons/files.png</value>
		<value condition="Container.Content(plugins)">special://skin/extras/icons/video-addons.png</value>
		<value condition="Container.Content(addons)">special://skin/extras/icons/addons.png</value>
		<value condition="SubString(Container.FolderPath,videodb://musicvideos/,Left)">special://skin/extras/icons/musicvideo.png</value>
		<value condition="Window.IsVisible(ColorPicker.xml)">special://skin/extras/icons/wand.png</value>
		<value condition="Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml)">special://skin/extras/icons/livetv.png</value>
		<value condition="Window.IsVisible(MyMusicPlaylistEditor.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyMusicSongs.xml)">special://skin/extras/icons/songs.png</value>
		<value condition="Window.IsVisible(MyPics.xml)">special://skin/extras/icons/pictures.png</value>
		<value condition="Window.IsVisible(MyPrograms.xml) | Window.IsVisible(AddonBrowser.xml)">special://skin/extras/icons/addons.png</value>
		<value condition="Window.IsVisible(weather)">special://skin/extras/icons/sun.png</value>
		<value condition="Window.IsVisible(SettingsSystemInfo.xml) | Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(settings) | Window.IsVisible(SkinSettings.xml)">special://skin/extras/icons/settings.png</value>
		<value condition="Window.IsVisible(MyMusicPlaylist.xml)">special://skin/extras/icons/playlist.png</value>
		<value condition="Window.IsVisible(FileManager.xml)">special://skin/extras/icons/database.png</value>
		<value condition="Window.IsVisible(Home.xml)">special://skin/extras/icons/home.png</value>
		<value condition="Window.IsVisible(MyVideoNav.xml)">special://skin/extras/icons/video-addons.png</value>
		<value>special://skin/extras/icons/artist.png</value>
	</variable>
	<variable name="MainHeaderLabel">
		<value condition="Skin.HasSetting(hide.busydialog) + Window.IsVisible(DialogBusy.xml)">$LOCALIZE[20186]...</value>
		<value condition="Window.IsVisible(ColorPicker.xml)">Pick a Colour</value>
		<value condition="Window.IsVisible(MyMusicPlaylistEditor.xml)">$LOCALIZE[20011]</value>
		<value condition="Window.IsVisible(DialogButtonMenu.xml)">$LOCALIZE[33060]</value>
		<value condition="Window.IsVisible(DialogFavourites.xml)">$LOCALIZE[1036]</value>
		<value condition="Window.IsVisible(script-ExtendedInfo Script-YoutubeList.xml)">$LOCALIZE[31141]</value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)">$LOCALIZE[31241]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + StringCompare(Container.FolderPath,videodb://movies/titles/)">$LOCALIZE[20342]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + StringCompare(Container.FolderPath,videodb://tvshows/titles/)">$LOCALIZE[20343]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + SubString(Container.FolderPath,videodb://movies/,Left)">$INFO[Container.FolderName]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + SubString(Container.FolderPath,videodb://tvshows/,Left) + Container.Content(episodes) + !IsEmpty(ListItem.TvShowTitle)">$INFO[ListItem.TvShowTitle]$INFO[Container.FolderName, - ,]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + SubString(Container.FolderPath,videodb://tvshows/,Left)">$INFO[Container.FolderName]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + !IsEmpty(Container.FolderName)">$INFO[Container.FolderName]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml)">$LOCALIZE[3]</value>
		<value condition="Window.IsVisible(MyPVRChannels.xml)">$LOCALIZE[19019]</value>
		<value condition="Window.IsVisible(MyPVRGuide.xml)">$LOCALIZE[4]</value>
		<value condition="Window.IsVisible(MyPVRRecordings.xml)">$LOCALIZE[19017]</value>
		<value condition="Window.IsVisible(MyPVRTimers.xml)">$LOCALIZE[19040]</value>
		<value condition="Window.IsVisible(MyPVRSearch.xml)">$LOCALIZE[137]</value>
		<value condition="!IsEmpty(Container.FolderName) + [Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyMusicSongs.xml)]">$INFO[Container.FolderName]</value>
		<value condition="Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyMusicSongs.xml)">$LOCALIZE[2]</value>
		<value condition="Window.IsVisible(SettingsSystemInfo.xml) | Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(settings) | Window.IsVisible(SkinSettings.xml)">$LOCALIZE[5]</value>
		<value condition="Window.IsVisible(weather)">$LOCALIZE[8]</value>
		<value condition="!IsEmpty(Container.FolderName) + Window.IsVisible(MyPics.xml)">$INFO[Container.FolderName]</value>
		<value condition="Window.IsVisible(MyPics.xml)">$LOCALIZE[1]</value>
		<value condition="Window.IsVisible(MyPrograms.xml)">$LOCALIZE[0]</value>
		<value condition="Window.IsVisible(AddonBrowser.xml)">$LOCALIZE[24001]</value>
		<value condition="Window.IsVisible(MyMusicPlaylist.xml)">$LOCALIZE[559]</value>
		<value condition="Window.IsVisible(FileManager.xml)">$LOCALIZE[744]</value>
		<value condition="Window.IsVisible(1101)">$LOCALIZE[31192]</value>
		<value condition="Window.IsVisible(1102)">$LOCALIZE[31193]</value>
		<value condition="Window.IsVisible(1103) + StringCompare(Window(1103).Property(content),1)">$INFO[Window(home).Property(ExtStudio),$LOCALIZE[31205] ,]</value>
		<value condition="Window.IsVisible(1103) + StringCompare(Window(1103).Property(content),2)">$INFO[Window(home).Property(ExtMovie),$LOCALIZE[31204] ,]</value>
		<value condition="Window.IsVisible(1103)">$INFO[Window(home).Property(ExtDirector),$LOCALIZE[31191] ,]</value>
		<value condition="Window.IsVisible(1104) + StringCompare(Window(1104).Property(content),1)">$LOCALIZE[31211]</value>
		<value condition="Window.IsVisible(1104) + StringCompare(Window(1104).Property(content),2)">$LOCALIZE[31210]</value>
		<value condition="Window.IsVisible(1104) + StringCompare(Window(1104).Property(content),3)">$LOCALIZE[31209]</value>
		<value condition="Window.IsVisible(1104)">$LOCALIZE[31208]</value>
		<value condition="Window.IsVisible(1105) + StringCompare(Window(1105).Property(content),1)">$LOCALIZE[31211]</value>
		<value condition="Window.IsVisible(1105) + StringCompare(Window(1105).Property(content),2)">$LOCALIZE[31210]</value>
		<value condition="Window.IsVisible(1105) + StringCompare(Window(1105).Property(content),3)">$LOCALIZE[31212]</value>
		<value condition="Window.IsVisible(1105)">$LOCALIZE[31213]</value>
		<value>$LOCALIZE[10000]</value>
	</variable>
	<variable name="SubHeaderLabel">
		<value condition="Window.IsVisible(script-ExtendedInfo Script-YoutubeList.xml)">$INFO[Window.Property(Filter_Label),, ]$INFO[Window.Property(TotalItems),, $LOCALIZE[31101]]</value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)">$LOCALIZE[31242]</value>
		<value condition="Window.IsVisible(LoginScreen.xml)">$LOCALIZE[10029]</value>
		<value condition="[Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml)]">[COLOR=$VAR[ColourHighlight]]$INFO[Container.NumItems,,[/COLOR] $LOCALIZE[31101]]$INFO[Control.GetLabel(3), • ,]$INFO[Control.GetLabel(28), • ,]</value>
		<value condition="!IsEmpty(Container.NumItems) + !Window.IsVisible(home) + Skin.HasSetting(furniture.unwatched) + Window.IsVisible(MyVideoNav.xml)">[COLOR=$VAR[ColourHighlight]]$INFO[Container.NumItems,,[/COLOR] $LOCALIZE[31101] • ][COLOR=$VAR[ColourHighlight]]$INFO[Container.TotalUnwatched,,[/COLOR] $LOCALIZE[16101]]$INFO[Control.GetLabel(3), • ,]</value>
		<value condition="!IsEmpty(Container.NumItems) + !Window.IsVisible(home) + !Skin.HasSetting(furniture.unwatched) + Window.IsVisible(MyVideoNav.xml)">[COLOR=$VAR[ColourHighlight]]$INFO[Container.NumItems,,[/COLOR] $LOCALIZE[31101] • ][COLOR=$VAR[ColourHighlight]]$INFO[Container.TotalWatched,,[/COLOR] $LOCALIZE[16102]]$INFO[Control.GetLabel(3), • ,]</value>
		<value condition="!IsEmpty(Container.NumItems) + !Window.IsVisible(home)">[COLOR=$VAR[ColourHighlight]]$INFO[Container.NumItems,,[/COLOR] $LOCALIZE[31101]]$INFO[Control.GetLabel(3), • ,]</value>
		<value condition="!IsEmpty(Container(9500).NumItems) + !Window.IsVisible(home)">[COLOR=$VAR[ColourHighlight]]$INFO[Container(9500).NumItems,,[/COLOR] $LOCALIZE[31101]]</value>
		<value condition="Window.IsVisible(MyWeather.xml) + !IsEmpty(Window(Weather).Property(Location))">[COLOR=$VAR[ColourHighlight]]$INFO[Weather.Temperature,,[/COLOR] ]$INFO[Window(Weather).Property(Location)]</value>
		<value condition="IsEmpty(Pvr.BackendChannels)">[COLOR=$VAR[ColourHighlight]]$INFO[Window(home).Property(Movies.Count)][/COLOR] $LOCALIZE[20342] • [COLOR=$VAR[ColourHighlight]]$INFO[Window(home).Property(TVShows.Count)][/COLOR] $LOCALIZE[20343] • [COLOR=$VAR[ColourHighlight]]$INFO[Window(home).Property(Music.AlbumsCount)][/COLOR] $LOCALIZE[132]</value>
		<value>[COLOR=$VAR[ColourHighlight]]$INFO[Window(home).Property(Movies.Count)][/COLOR] $LOCALIZE[20342] • [COLOR=$VAR[ColourHighlight]]$INFO[Window(home).Property(TVShows.Count)][/COLOR] $LOCALIZE[20343] • [COLOR=$VAR[ColourHighlight]]$INFO[Window(home).Property(Music.AlbumsCount)][/COLOR] $LOCALIZE[132] • [COLOR=$VAR[ColourHighlight]]$INFO[Pvr.BackendChannels][/COLOR] $LOCALIZE[19019]</value>
	</variable>
	<include name="Furniture_Header">
		<control type="grouplist">
			<top>SidePad</top>
			<left>SidePad</left>
			<visible>!Skin.HasSetting(furniture.header)</visible>
			<visible>!ControlGroup(303).HasFocus()</visible>
			<visible>!Control.HasFocus(515)</visible>
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)</visible>
			<include condition="!Window.IsVisible(script-ExtendedInfo Script-VideoList.xml)">Animation.FurnitureFadeInOut</include>
			<include condition="Window.IsVisible(script-ExtendedInfo Script-VideoList.xml)">FurnitureFadeInOutExtended</include>
			<orientation>horizontal</orientation>
			<itemgap>24</itemgap>
			<control type="group" description="iconbox">
				<width>80</width>
				<height>80</height>
				<control type="image">
					<width>80</width>
					<height>80</height>
					<texture colordiffuse="Panel" border="8">common/box.png</texture>
				</control>
				<control type="image">
					<top>-14</top>
					<left>-14</left>
					<width>108</width>
					<height>108</height>
					<texture colordiffuse="PanelWhite100" border="8">$VAR[HeaderIcon]</texture>
					<visible>!Container.Scrolling</visible>
					<visible>!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
				<control type="label">
					<centertop>39</centertop>
					<centerleft>40</centerleft>
					<width>80</width>
					<height>80</height>
					<font>LargeBold</font>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.SortLetter,[UPPERCASE],[/UPPERCASE]]</label>
					<textcolor>PanelWhite100</textcolor>
					<visible>Container.Scrolling</visible>
					<visible>!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
<!--############# Updated to new Busy Spinner ############-->				
				<control type="multiimage">
                    <description>Busy animation</description>
                    <include>GlobalSpinnerOverlay</include>
					<posx>590</posx>
					<posy>500</posy>
                    <width>150</width>
                    <height>150</height>
                    <animation effect="rotate" condition="true" start="0" end="360" loop="true" time="1000" center="auto">Conditional</animation>
					<imagepath>$INFO[Skin.String(SkinHelper.SpinnerTexturePath)]</imagepath>
					<timeperimage>100</timeperimage>
                    <colordiffuse>$VAR[SpinnerHighlight]</colordiffuse>
					<fadetime>0</fadetime>
                    <aspectratio>keep</aspectratio>
					<visible>!Skin.String(SkinHelper.SpinnerTexturePath,None)</visible>
					<visible>Skin.HasSetting(hide.busydialog) + Window.IsVisible(DialogBusy.xml)</visible>
                </control>
<!--############# Updated to new Busy Spinner ############-->
                <control type="label">
                    <description>Busy label</description>
                    <posx>590</posx>
                    <posy>490</posy>
                    <width>520</width>
                    <height>165</height>
                    <aligny>center</aligny>
                    <align>center</align>
                    <label>$LOCALIZE[20186]...</label>
                    <textcolor>ffededed</textcolor>
					<visible>Skin.HasSetting(hide.busydialog) + Window.IsVisible(DialogBusy.xml)</visible>
					<include>GlobalSpinnerOverlay</include>
                </control>
				<!--<control type="image">
					<centertop>40</centertop>
					<centerleft>40</centerleft>
					<width>48</width>
					<height>48</height>
		            <texture colordiffuse="$VAR[SpinnerHighlight]" fallback="special://skin/extras/spinners/flower.gif">$INFO[Skin.String(busyloader)]</texture>
					<visible>Skin.HasSetting(hide.busydialog) + Window.IsVisible(DialogBusy.xml)</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>-->
			</control>
			<control type="group">
				<control type="label">
					<centertop>24</centertop>
					<width>auto</width>
					<font>MediumBold</font>
					<textcolor>Dark1</textcolor>
					<label>$VAR[MainHeaderLabel]</label>
				</control>
				<control type="label">
					<centertop>58</centertop>
					<font>Flag</font>
					<width>auto</width>
					<textcolor>Dark2</textcolor>
					<label>$VAR[SubHeaderLabel]</label>
				</control>
			</control>
		</control>
	</include>
	<include name="ExtendedFurniture_Header">
		<control type="grouplist">
			<top>3</top>
			<left>90</left>
			<visible>Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)</visible>
			<include>Animation.FurnitureFadeInOutExtended</include>
			<orientation>horizontal</orientation>
			<itemgap>24</itemgap>
			<control type="group" description="iconbox">
				<width>80</width>
				<height>80</height>
				<control type="image">
					<width>80</width>
					<height>80</height>
					<texture colordiffuse="Panel" border="8">common/box.png</texture>
				</control>
				<control type="image">
					<top>-14</top>
					<left>-14</left>
					<width>108</width>
					<height>108</height>
					<texture colordiffuse="PanelWhite100" border="8">$VAR[HeaderIcon]</texture>
					<visible>!Container.Scrolling</visible>
					<visible>!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
				<control type="label">
					<centertop>39</centertop>
					<centerleft>40</centerleft>
					<width>80</width>
					<height>80</height>
					<font>LargeBold</font>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.SortLetter,[UPPERCASE],[/UPPERCASE]]</label>
					<textcolor>PanelWhite100</textcolor>
					<visible>Container.Scrolling</visible>
					<visible>!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
<!--############# Updated to new Busy Spinner ############-->				
				<control type="multiimage">
                    <description>Busy animation</description>
					<include>GlobalSpinnerOverlay</include>
                    <posx>740</posx>
					<posy>500</posy>
                    <width>150</width>
                    <height>150</height>
                    <animation effect="rotate" condition="true" start="0" end="360" loop="true" time="1000" center="auto">Conditional</animation>
					<imagepath>$INFO[Skin.String(SkinHelper.SpinnerTexturePath)]</imagepath>
					<timeperimage>100</timeperimage>
                    <colordiffuse>$VAR[SpinnerHighlight]</colordiffuse>
					<fadetime>0</fadetime>
                    <aspectratio>keep</aspectratio>
					<visible>!Skin.String(SkinHelper.SpinnerTexturePath,None)</visible>
					<visible>Skin.HasSetting(hide.busydialog) + Window.IsVisible(DialogBusy.xml)</visible>
                </control>
<!--############# Updated to new Busy Spinner ############-->
                <control type="label">
                    <description>Busy label</description>
                    <posx>750</posx>
                    <posy>490</posy>
                    <width>520</width>
                    <height>170</height>
                    <aligny>center</aligny>
                    <align>center</align>
                    <label>$LOCALIZE[20186]...</label>
                    <textcolor>ffededed</textcolor>
					<visible>Skin.HasSetting(hide.busydialog) + Window.IsVisible(DialogBusy.xml)</visible>
					<include>GlobalSpinnerOverlay</include>
                </control>				
			</control>
			<control type="group">
				<control type="label">
					<centertop>24</centertop>
					<width>auto</width>
					<font>MediumBold</font>
					<textcolor>Dark1</textcolor>
					<label>$VAR[MainHeaderLabel]</label>
				</control>
				<control type="label">
					<centertop>58</centertop>
					<font>Flag</font>
					<width>auto</width>
					<textcolor>Dark2</textcolor>
					<label>$VAR[SubHeaderLabel]</label>
				</control>
			</control>
		</control>
	</include>
	<include name="Furniture_Clock">
		<control type="group">
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<centerbottom>94</centerbottom>
			<visible>!Skin.HasSetting(furniture.clock)</visible>
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>
			<include>Animation.FurnitureFadeInOut</include>
			<height>84</height>
			<animation effect="slide" start="0" end="0,-10" time="150" condition="Skin.HasSetting(furniture.weather)">Conditional</animation>
			<control type="label">
				<centertop>24</centertop>
				<right>130</right>
				<align>right</align>
				<font>LargeBold</font>
				<textcolor>Dark1</textcolor>
				<label>$INFO[System.Time(hh:mm)]</label>
				<animation effect="slide" start="0" end="50" time="0" condition="IsEmpty(System.Time(xx))">Conditional</animation>
			</control>
			<control type="label">
				<centertop>30</centertop>
				<right>SidePad</right>
				<font>SmallBold</font>
				<textcolor>Dark3</textcolor>
				<align>right</align>
				<width>120</width>
				<label>$INFO[System.Time(xx)]</label>
				<visible>!IsEmpty(System.Time(xx))</visible>
			</control>
			<control type="label">
				<centertop>64</centertop>
				<right>SidePad</right>
				<font>Flag</font>
				<textcolor>Dark2</textcolor>
				<align>right</align>
				<width>50%</width>
				<label>$INFO[System.Date(DDD)]$COMMA $INFO[System.Date(d MMM yyyy)]</label>
			</control>
			<control type="label">
				<centertop>92</centertop>
				<right>SidePad</right>
				<font>Flag</font>
				<textcolor>Dark3</textcolor>
				<align>right</align>
				<width>50%</width>
				<visible>Skin.HasSetting(furniture.weather)</visible>
				<label>[COLOR=$VAR[ColourHighlight]]$INFO[Weather.Temperature][/COLOR] $INFO[Weather.Conditions]</label>
			</control>
		</control>
	</include>
<!----  Modification Added --------- SkinSettings -------------------------------------------->	
	<include name="Furniture_SkinSetting_Clock">
		<control type="group">
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<centerbottom>55</centerbottom>
			<visible>!Skin.HasSetting(furniture.clock)</visible>
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>
			<include>Animation.FurnitureFadeInOut</include>
			<height>84</height>
			<animation effect="slide" start="0" end="0,-10" time="150" condition="Skin.HasSetting(furniture.weather)">Conditional</animation>
			<control type="label">
				<centertop>14</centertop>
				<right>135</right>
				<align>right</align>
				<font>LargeBold</font>
				<textcolor>Dark1</textcolor>
				<label>$INFO[System.Time(hh:mm)]</label>
				<animation effect="slide" start="0" end="50" time="0" condition="IsEmpty(System.Time(xx))">Conditional</animation>
			</control>
			<control type="label">
				<centertop>20</centertop>
				<right>SidePad</right>
				<font>SmallBold</font>
				<textcolor>Dark3</textcolor>
				<align>right</align>
				<width>120</width>
				<label>$INFO[System.Time(xx)]</label>
				<visible>!IsEmpty(System.Time(xx))</visible>
			</control>
			<control type="label">
				<centertop>44</centertop>
				<right>SidePad</right>
				<font>Flag</font>
				<textcolor>Dark2</textcolor>
				<align>right</align>
				<width>50%</width>
				<label>$INFO[System.Date(DDD)]$COMMA $INFO[System.Date(d MMM yyyy)]</label>
			</control>
			<!--<control type="label">
				<centertop>92</centertop>
				<right>SidePad</right>
				<font>Flag</font>
				<textcolor>Dark3</textcolor>
				<align>right</align>
				<width>50%</width>
				<visible>Skin.HasSetting(furniture.weather)</visible>
				<label>[COLOR=$VAR[ColourHighlight]]$INFO[Weather.Temperature][/COLOR] $INFO[Weather.Conditions]</label>
			</control>-->
		</control>
	</include>
<!--- Modification ----- Added -----SkinSettings-------------------------------------------------------->	
	<include name="Furniture_SkinSetting_Header">
		<control type="grouplist">
			<!--<top>SidePad</top>-->
			<left>SidePad</left>
			<visible>!Skin.HasSetting(furniture.header)</visible>
			<orientation>horizontal</orientation>
			<itemgap>24</itemgap>
			<control type="group" description="iconbox">
				<width>80</width>
				<height>80</height>
				<control type="image">
					<top>-4</top>
					<left>-14</left>
					<width>108</width>
					<height>108</height>
					<texture colordiffuse="PanelWhite100" border="8">$VAR[HeaderIcon]</texture>
					<visible>!Container.Scrolling</visible>
					<visible>!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
				<control type="label">
					<centertop>80</centertop>
					<centerleft>40</centerleft>
					<width>80</width>
					<height>80</height>
					<font>LargeBold</font>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.SortLetter,[UPPERCASE],[/UPPERCASE]]</label>
					<textcolor>PanelWhite100</textcolor>
					<visible>Container.Scrolling</visible>
					<visible>!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
<!--############# Updated to new Busy Spinner ############-->				
				<control type="multiimage">
                    <description>Busy animation</description>
					<include>GlobalSpinnerOverlay</include>
					<posx>740</posx>
					<posy>500</posy>
                    <width>150</width>
                    <height>150</height>
                    <animation effect="rotate" condition="true" start="0" end="360" loop="true" time="1000" center="auto">Conditional</animation>
					<imagepath>$INFO[Skin.String(SkinHelper.SpinnerTexturePath)]</imagepath>
					<timeperimage>100</timeperimage>
                    <colordiffuse>$VAR[SpinnerHighlight]</colordiffuse>
					<fadetime>0</fadetime>
                    <aspectratio>keep</aspectratio>
					<visible>!Skin.String(SkinHelper.SpinnerTexturePath,None)</visible>
					<visible>Skin.HasSetting(hide.busydialog) + Window.IsVisible(DialogBusy.xml)</visible>
                </control>
<!--############# Updated to new Busy Spinner ############-->
                <control type="label">
                    <description>Busy label</description>
                    <posx>750</posx>
                    <posy>490</posy>
                    <width>520</width>
                    <height>170</height>
                    <aligny>center</aligny>
                    <align>center</align>
                    <label>$LOCALIZE[20186]...</label>
                    <textcolor>ffededed</textcolor>
					<visible>Skin.HasSetting(hide.busydialog) + Window.IsVisible(DialogBusy.xml)</visible>
					<include>GlobalSpinnerOverlay</include>
                </control>
			</control>
			<control type="group">
				<control type="label">
					<centertop>40</centertop>
					<width>auto</width>
					<font>MediumBold</font>
					<textcolor>Dark1</textcolor>
					<label>$VAR[MainHeaderLabel]</label>
				</control>				
			</control>
		</control>
	</include>
	
	
	
	<include name="Furniture_NowPlaying">
		<control type="grouplist">
			<visible>!Skin.HasSetting(furniture.nowplaying)</visible>
			<visible>!Window.IsVisible(DialogVolumeBar.xml)</visible>
			<visible>!Window.IsVisible(DialogKaiToast.xml)</visible>
			<visible>!Window.IsVisible(DialogExtendedProgressBar.xml)</visible>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<visible>IsEmpty(Window(10025).Property(PlayingBackgroundMedia))</visible>
			<visible>!Window.IsActive(DialogKaiToast.xml)</visible>
			<visible>Player.HasMedia</visible>
			<visible>!IsEmpty(Player.Duration) | Player.HasAudio</visible>
			<visible>!ControlGroup(303).HasFocus()</visible>
			<animation effect="slide" start="0" end="0,-250" time="150" condition="Control.HasFocus(301) + !Skin.HasSetting(home.vertical)">Conditional</animation>
			<top>70</top>
			<right>62</right>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<itemgap>24</itemgap>
			<align>right</align>
			<control type="group">
				<width>700</width>
				<posy>10</posy>
				<control type="image">
					<centertop>38</centertop>
					<width>130</width>
                    <height>64</height>
					<texture colordiffuse="$VAR[ColourHighlight]">equaliser.gif</texture>
					<visible>!Player.Paused</visible>
				</control>
				<control type="image">
					<centertop>24</centertop>
					<width>auto</width>
					<height>auto</height>
					<texture colordiffuse="$VAR[ColourHighlight]">equaliser_stop.gif</texture>
					<visible>Player.Paused</visible>
				</control>
				<control type="label">
					<centertop>24</centertop>
					<width>auto</width>
					<font>MediumBold</font>
					<align>left</align>
					<textcolor>Dark1</textcolor>
					<label>$INFO[Player.Title]</label>
				</control>
				<control type="label">
					<centertop>58</centertop>
					<align>right</align>
					<font>Flag</font>
					<width>auto</width>
					<textcolor>Dark2</textcolor>
					<label>$INFO[VideoPlayer.TvShowTitle,, ]$INFO[MusicPlayer.Artist,, ]$INFO[Player.Time]$INFO[Player.Duration, / ,]</label>
				</control>
			</control>
			<control type="group">
				<posx>-20</posx>
				<height>100</height>
				<width>100</width>
				<control type="image" description="Back">
					<left>0</left>
					<centertop>50%</centertop>
					<width>100</width>
					<height>100</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture>progress/back.png</texture>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
				<control type="image" description="Play">
					<left>0</left>
					<centertop>50%</centertop>
					<width>100</width>
					<height>100</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture colordiffuse="Dark1">progress/play.png</texture>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
					<visible>!Player.Paused</visible>
				</control>
				<control type="image" description="Pause">
					<left>0</left>
					<centertop>50%</centertop>
					<width>100</width>
					<height>100</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture colordiffuse="Dark1">progress/pause.png</texture>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
					<visible>Player.Paused</visible>
				</control>
				<control type="progress" id="933">
					<texturebg>-</texturebg>
					<lefttexture>-</lefttexture>
					<midtexture>-</midtexture>
					<righttexture>-</righttexture>
					<info>Player.Progress</info>
					<visible>false</visible>
				</control>
				<control type="image">
					<left>0</left>
					<centertop>50%</centertop>
					<width>100</width>
					<height>100</height>
					<texture colordiffuse="$VAR[ColourHighlight]">$INFO[Control.GetLabel(933),progress/circle/p,.png]</texture>
					<aspectratio align="center">keep</aspectratio>
					<visible>!IsEmpty(Player.Duration)</visible>
				</control>
			</control>
		</control>
	</include>
	
	<!-- Restore Furniture_OverlayInfo-->
	<include name="Furniture_OverlayInfo">

        <control type="button" id ="9601">
            <width>1</width>
            <height>1</height>
            <visible allowhiddenfocus="true">false</visible>
            <onback>50</onback>
            <onup>50</onup>
            <ondown>50</ondown>
            <onleft>50</onleft>
            <onright>50</onright>
        </control>

        <control type="group">
            <visible>[System.IdleTime(3) + Skin.HasSetting(furniture.overlayinfo)] | Control.HasFocus(9601)</visible>
            <visible>![Window.IsVisible(script-skinshortcuts.xml) | Window.IsVisible(DialogSongInfo.xml) | Window.IsVisible(DialogPictureInfo.xml) | Window.IsVisible(FileBrowser.xml) | Window.IsVisible(DialogProgress.xml) | Window.IsVisible(DialogYesNo.xml) | Window.IsVisible(DialogOK.xml) | Window.IsVisible(DialogSelect.xml) | Window.IsVisible(DialogContextMenu.xml) | Window.IsVisible(DialogButtonMenu.xml) | ControlGroup(9000).HasFocus()]</visible>
            <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
            <visible>!Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) + !Window.IsVisible(script-globalsearch-main.xml) + !Window.IsVisible(script-globalsearch-infodialog.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml)</visible>
            <visible>[!IsEmpty(Window(home).Property(Set.Movies.ExtendedPlot)) + [Container.Content(Sets) | substring(ListItem.Path,videodb://movies/sets,left)]] | !IsEmpty(ListItem.Plot)</visible>
            <include>Animation.FadeIn</include>
            <control type="image" description="Background">
                <include>Dimensions_Fullscreen</include>
                <texture colordiffuse="Background">common/bg.jpg</texture>
                <animation effect="fade" start="100" end="95" condition="true">Conditional</animation>
            </control>
            <control type="image" description="clearlogo">
                <visible>Skin.HasSetting(furniture.logo)</visible>
                <centertop>120</centertop>
                <centerleft>50%</centerleft>
                <width>400</width>
                <height>100</height>
                <aspectratio align="center">keep</aspectratio>
                <texture background="true">$VAR[ClearLogoTopVar]</texture>
            </control>
        </control>

        <control type="group">
            <left>SidePad</left>
            <right>SidePad</right>
            <top>PosterPad</top>
            <height>650</height>
            <visible>[System.IdleTime(3) + Skin.HasSetting(furniture.overlayinfo)] | Control.HasFocus(9601)</visible>
            <visible>![Window.IsVisible(script-skinshortcuts.xml) | Window.IsVisible(DialogSongInfo.xml) | Window.IsVisible(DialogPictureInfo.xml) | Window.IsVisible(FileBrowser.xml) | Window.IsVisible(DialogProgress.xml) | Window.IsVisible(DialogYesNo.xml) | Window.IsVisible(DialogOK.xml) | Window.IsVisible(DialogSelect.xml) | Window.IsVisible(DialogContextMenu.xml) | Window.IsVisible(DialogButtonMenu.xml) | ControlGroup(9000).HasFocus()]</visible>
            <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
            <visible>!Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) + !Window.IsVisible(script-globalsearch-main.xml) + !Window.IsVisible(script-globalsearch-infodialog.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml)</visible>
            <visible>[!IsEmpty(Window(home).Property(Set.Movies.ExtendedPlot)) + [Container.Content(Sets) | substring(ListItem.Path,videodb://movies/sets,left)]] | !IsEmpty(ListItem.Plot)</visible>
            <include>Animation.FadeIn.Slide</include>

            <control type="label">
                <description>header label</description>
                <left>60</left>
                <right>60</right>
                <posy>60</posy>
                <font>EpisodeNumber</font>
                <textcolor>Dark1</textcolor>
                <height>45</height>
                <label>$VAR[LabelOverlayTitle]</label>
            </control>

            <control type="textbox">
                <description>textarea</description>
                <left>60</left>
                <right>60</right>
                <top>150</top>
                <bottom>0</bottom>
                <align>justify</align>
                <font>Medium</font>
                <textcolor>Dark1</textcolor>
                <label>$VAR[LabelOverlayPlot]</label>
            </control>
        </control>
    </include>

	<include name="Furniture_Home_Flags">
		<control type="grouplist">
			<visible>!Skin.HasSetting(furniture.flags)</visible>
			<visible>Control.HasFocus(301)</visible>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<left>226</left>
			<centerbottom>NavBarPad</centerbottom>
			<width>1400</width>
			<height>120</height>
			<orientation>horizontal</orientation>
			<align>left</align>
			<itemgap>10</itemgap>
			<usecontrolcoords>true</usecontrolcoords>
			<control type="group">
				<visible>!StringCompare(Container(300).ListItem.Property(widget),Weather) + !StringCompare(Container(300).ListItem.Property(widget),NextAired) + !StringCompare(Container(300).ListItem.Property(widget),Favourites) + !substring(Container(300).ListItem.Property(widget),Albums)</visible>
				<centertop>50%</centertop>
				<width>73</width>
				<height>50</height>
				<control type="image" description="button back">
					<width>73</width>
					<height>50</height>
					<texture colordiffuse="Dark1">common/cadre.png</texture>
				</control>
				<control type="label">
					<width>73</width>
					<height>46</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>$VAR[HDSD]</label>
					<font>FlagHD</font>
					<textcolor>Dark1</textcolor>
					<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
				</control>
				<control type="label">
					<width>73</width>
					<height>46</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>$VAR[HDSD]</label>
					<font>FlagHD</font>
					<textcolor>$VAR[ColourHighlight2]</textcolor>
					<visible>Skin.HasSetting(furniture.flags.colour)</visible>
				</control>
			</control>
			<control type="image">
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[HomeFlagstar1].png</texture>
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),Weather)</visible>
			</control>
			<control type="image">
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="$VAR[ColourHighlight]">flags/$VAR[HomeFlagstar1].png</texture>
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),Weather)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[HomeFlagstar2].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),Weather)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="$VAR[ColourHighlight]">flags/$VAR[HomeFlagstar2].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),Weather)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[HomeFlagstar3].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),Weather)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="$VAR[ColourHighlight]">flags/$VAR[HomeFlagstar3].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),Weather)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[HomeFlagstar4].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),Weather)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="$VAR[ColourHighlight]">flags/$VAR[HomeFlagstar4].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),Weather)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[HomeFlagstar5].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),Weather)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="$VAR[ColourHighlight]">flags/$VAR[HomeFlagstar5].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),Weather)</visible>
			</control>
			<control type="label">
				<left>-16</left>
				<width min="48">auto</width>
				<centertop>50%</centertop>
				<height>64</height>
				<align>left</align>
				<aligny>center</aligny>
				<label>$INFO[Container(301).ListItem.Rating]</label>
				<font>Flag</font>
				<textcolor>Dark1</textcolor>
				<visible>Skin.HasSetting(furniture.numericrating)</visible>
			</control>
			<include>lib_Rating_TV</include>
			<include condition="IsEmpty(Skin.String(RatingCountry))">lib_Rating_BBFC_home</include>
			<include condition="Stringcompare(Skin.String(RatingCountry),US)">lib_Rating_MPAA_home</include>
			<include condition="Stringcompare(Skin.String(RatingCountry),UK)">lib_Rating_BBFC_home</include>
			<include condition="Stringcompare(Skin.String(RatingCountry),Germany)">lib_Rating_FSK_home</include>
			<include condition="Stringcompare(Skin.String(RatingCountry),NL)">lib_Rating_NL_home</include>
			<include>lib_Rating_TV_home</include>
			<control type="image">
				<width>108</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[Container(301).ListItem.VideoAspect,flags/aspectratio/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!IsEmpty(Container(301).ListItem.VideoAspect) + !Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>110</width>
				<height>60</height>
				<centertop>51%</centertop>
				<texture>$INFO[Container(301).ListItem.VideoAspect,colored/aspectratio/,.png]</texture>
				<aspectratio align="center">stretch</aspectratio>
				<visible>!IsEmpty(Container(301).ListItem.VideoAspect) + Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[Container(301).ListItem.VideoResolution,flags/resolution/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!IsEmpty(Container(301).ListItem.VideoResolution) + !Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>110</width>
				<height>60</height>
				<centertop>51%</centertop>
				<texture>$INFO[Container(301).ListItem.VideoResolution,colored/resolution/,.png]</texture>
				<aspectratio align="left">stretch</aspectratio>
				<visible>!IsEmpty(Container(301).ListItem.VideoResolution) + Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[Container(301).ListItem.VideoCodec,flags/video/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!IsEmpty(Container(301).ListItem.VideoCodec) + !Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>110</width>
				<height>62</height>
				<centertop>51%</centertop>
				<texture>$INFO[Container(301).ListItem.VideoCodec,colored/source/,.png]</texture>
				<aspectratio align="left">stretch</aspectratio>
				<visible>!IsEmpty(Container(301).ListItem.VideoCodec) + Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[Container(301).ListItem.AudioCodec,flags/audio/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!IsEmpty(Container(301).ListItem.AudioCodec) + !Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>72</height>
				<centertop>51%</centertop>
				<texture>$INFO[Container(301).ListItem.AudioCodec,colored/audio/,.png]</texture>
				<aspectratio align="left">stretch</aspectratio>
				<visible>!IsEmpty(Container(301).ListItem.AudioCodec) + Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[Container(301).ListItem.AudioChannels,flags/channels/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!IsEmpty(Container(301).ListItem.AudioChannels) + !Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>110</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture>$INFO[Container(301).ListItem.AudioChannels,colored/channels/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!IsEmpty(Container(301).ListItem.AudioChannels) + Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="group">
				<centertop>50%</centertop>
				<width>170</width>
				<height>64</height>
				<visible>!IsEmpty(Container(301).ListItem.Duration) + !Skin.HasSetting(furniture.flags.colour)</visible>
				<control type="image">
					<height>50</height>
					<centertop>50%</centertop>
					<texture colordiffuse="Dark1">flags/time.png</texture>
					<aspectratio align="left">keep</aspectratio>
					<visible>!IsEmpty(Container(301).ListItem.Duration)</visible>
				</control>
				<control type="label">
					<left>50</left>
					<width>115</width>
					<centertop>50%</centertop>
					<height>64</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[Container(301).ListItem.Duration,, $LOCALIZE[31102] ]</label>
					<font>Small</font>
					<textcolor>Dark1</textcolor>
					<visible>!IsEmpty(Container(301).ListItem.Duration)</visible>
				</control>
			</control>
			<control type="group">
				<centertop>52%</centertop>
				<width>230</width>
				<height>50</height>
				<visible>!IsEmpty(Container(301).ListItem.Duration) + Skin.HasSetting(furniture.flags.colour)</visible>
				<control type="label">
					<left>0</left>
					<width>230</width>
					<centertop>50%</centertop>
					<height>50</height>
					<align>left</align>
					<aligny>center</aligny>
					<label>$INFO[Container(301).ListItem.Duration,, $LOCALIZE[31102] ]</label>
					<font>DurationFont</font>
					<textcolor>$VAR[ColourHighlight]</textcolor>
					<visible>!IsEmpty(Container(301).ListItem.Duration)</visible>
				</control>
			</control>
			<control type="group">
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
				<centertop>50%</centertop>
				<height>64</height>
				<width>64</width>
				<control type="image">
					<width>73</width>
					<texture colordiffuse="Dark1">flags/imdb.png</texture>
					<visible>!IsEmpty(Container(301).ListItem.Top250)</visible>
				</control>
				<control type="label">
					<left>70</left>
					<aligny>top</aligny>
					<top>7</top>
					<width>auto</width>
					<font>Medium</font>
					<align>left</align>
					<textcolor>Black700</textcolor>
					<label>#$INFO[Container(301).ListItem.Top250]</label>
					<visible>!IsEmpty(Container(301).ListItem.Top250)</visible>
				</control>
			</control>
			<control type="group">
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
				<centertop>52%</centertop>
				<height>64</height>
				<width>64</width>
				<control type="image">
					<width>73</width>
					<texture>views/imdbtop250.png</texture>
					<visible>!IsEmpty(Container(301).ListItem.Top250)</visible>
					<aspectratio>keep</aspectratio>
				</control>
				<control type="label">
					<left>77</left>
					<aligny>top</aligny>
					<top>7</top>
					<width>auto</width>
					<font>Medium</font>
					<align>left</align>
					<textcolor>fff3ce13</textcolor>
					<label>#$INFO[Container(301).ListItem.Top250]</label>
					<visible>!IsEmpty(Container(301).ListItem.Top250)</visible>
				</control>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/3D.png</texture>
				<visible>Container(301).ListItem.IsStereoscopic</visible>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/bluray.png</texture>
				<visible>[substring(Container(301).ListItem.FilenameAndPath,bluray) | substring(Container(301).ListItem.FilenameAndPath,bdrip) | substring(Container(301).ListItem.FilenameAndPath,bd25) | substring(Container(301).ListItem.FilenameAndPath,bd50)]</visible>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/hddvd.png</texture>
				<visible>substring(Container(301).ListItem.FilenameAndPath,hddvd)</visible>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/dvd.png</texture>
				<visible>substring(Container(301).ListItem.FilenameAndPath,dvd) + !substring(Container(301).ListItem.FilenameAndPath,hddvd)</visible>
			</control>
		</control>
	</include>
	
	<variable name="HomeFlagstar1">
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,1)">star10</value>
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,0)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HomeFlagstar2">
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,3)">star10</value>
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,2)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HomeFlagstar3">
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,5)">star10</value>
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,4)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HomeFlagstar4">
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,7)">star10</value>
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,6)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HomeFlagstar5">
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,9)">star10</value>
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,8)">star5</value>
		<value>star0</value>
	</variable>
</includes>