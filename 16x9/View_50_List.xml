<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<includes>
	<include name="View_50_List">
		<description>List View (id=50)</description>
		<control type="group">
			<include>Animation.Common</include>
			<visible>Control.IsVisible(50)</visible>
			<!--<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>-->
			<control type="group">
				<control type="list" id="50">
					<visible>Container.Content(musicvideos) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(actors) | Container.Content(sets) | Container.Content(seasons) | [Container.Content(files) + !substring(Container.FolderPath,plugin://,left) + !stringcompare(Container.FolderPath,library://video/movies/) + !stringcompare(Container.FolderPath,library://video/tvshows/) + !stringcompare(Container.FolderPath,special://videoplaylists/)] | [Container.Content(episodes) + !substring(Container.FolderPath,plugin://,left)]</visible>
					<top>PosterPad</top>
					<height>PosterH</height>
					<left>ListX</left>
					<right>SidePad</right>
					<onleft condition="!Skin.HasSetting(global.kioskmode)">9000</onleft>
					<onright>60</onright>
					<onup>50</onup>
					<ondown>50</ondown>
					<pagecontrol>60</pagecontrol>
					<viewtype label="535">list</viewtype>
					<!--<visible>StringCompare(Window(Home).Property(SkinHelper.ForcedView),50) | IsEmpty(Window(Home).Property(SkinHelper.ForcedView))</visible>-->
					<scrolltime tween="quadratic">400</scrolltime>
					<itemlayout width="ListW" height="64">
						<include>50itemlayout</include>
					</itemlayout>
					<focusedlayout width="ListW" height="128" condition="Skin.HasSetting(50list.showplot)">
						<control type="group">
							<!--<visible>Control.HasFocus(50) + !Window.IsVisible(DialogVideoInfo.xml)</visible>-->
							<visible>Control.HasFocus(50)</visible>
							<include>50focuslayout</include>
							<control type="textbox">
								<height>68</height>
								<bottom>10</bottom>
								<left>30</left>
								<right>30</right>
								<align>justify</align>
								<label>$VAR[LabelPlotBox]</label>
								<textcolor>$VAR[ViewsDetailsHighlightTextColour]</textcolor>
								<font>Tiny</font>
							</control>
						</control>
						<control type="group">
							<!--<visible>!Control.HasFocus(50) | Window.IsVisible(DialogVideoInfo.xml)</visible>-->
							<visible>!Control.HasFocus(50)</visible>
							<include>50itemlayout</include>
							<control type="textbox">
								<height>68</height>
								<bottom>10</bottom>
								<left>30</left>
								<right>30</right>
								<align>justify</align>
								<label>$VAR[LabelPlotBox]</label>
								<textcolor>Dark1</textcolor>
								<font>Tiny</font>
							</control>
						</control>
					</focusedlayout>
					<focusedlayout width="ListW" height="64" condition="!Skin.HasSetting(50list.showplot)">
						<control type="group">
							<!--<visible>Control.HasFocus(50) + !Window.IsVisible(DialogVideoInfo.xml)</visible>-->
							<visible>Control.HasFocus(50)</visible>
							<include>50focuslayout</include>
						</control>
						<control type="group">
							<!--<visible>!Control.HasFocus(50) | Window.IsVisible(DialogVideoInfo.xml)</visible>-->
							<visible>!Control.HasFocus(50)</visible>
							<include>50itemlayout</include>
						</control>
					</focusedlayout>
				</control>
				<include>Furniture_Scrollbar</include>
			</control>
			<include>View_50_SidePoster</include>
		</control>
	</include>
	<include name="View_50_LowList">
		<description>List View (id=50)</description>
		<control type="group">
			<include>Animation.Common</include>
			<visible>Control.IsVisible(50)</visible>
			<!--<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>-->
			<control type="group">
				<posy>320</posy>
				<control type="fixedlist" id="50">
					<visible>Container.Content(musicvideos) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(actors) | Container.Content(sets) | Container.Content(seasons) | [Container.Content(files) + !substring(Container.FolderPath,plugin://,left) + !stringcompare(Container.FolderPath,library://video/movies/) + !stringcompare(Container.FolderPath,library://video/tvshows/) + !stringcompare(Container.FolderPath,special://videoplaylists/)] | [Container.Content(episodes) + !substring(Container.FolderPath,plugin://,left)]</visible>
					<top>PosterPad</top>
					<height>320</height>
					<left>ListX</left>
					<right>SidePad</right>
					<onleft condition="!Skin.HasSetting(global.kioskmode)">9000</onleft>
					<onright>60</onright>
					<onup>50</onup>
					<ondown>50</ondown>
					<focusposition>2</focusposition>
					<movement>2</movement>
					<pagecontrol>60</pagecontrol>
					<viewtype label="535">list</viewtype>
					<!--<visible>StringCompare(Window(Home).Property(SkinHelper.ForcedView),50) | IsEmpty(Window(Home).Property(SkinHelper.ForcedView))</visible>-->
					<scrolltime tween="quadratic">400</scrolltime>
					<itemlayout width="ListW" height="64">
						<include>50itemlayout</include>
					</itemlayout>
					<focusedlayout width="ListW" height="64">
						<control type="group">
							<!--<visible>Control.HasFocus(50) + !Window.IsVisible(DialogVideoInfo.xml)</visible>-->
							<visible>Control.HasFocus(50)</visible>
							<include>50focuslayout</include>
						</control>
						<control type="group">
							<!--<visible>!Control.HasFocus(50) | Window.IsVisible(DialogVideoInfo.xml)</visible>-->
							<visible>!Control.HasFocus(50)</visible>
							<include>50itemlayout</include>
						</control>
					</focusedlayout>
				</control>
				<control type="scrollbar" id="60">
					<onback>50</onback>
					<centerright>60</centerright>
					<posy>PosterPad</posy>
					<height>320</height>
					<width>8</width>
					<onleft>50</onleft>
					<onright condition="!Skin.HasSetting(global.kioskmode)">9000</onright>
<!--Changed-->		<texturesliderbackground border="4" colordiffuse="$VAR[ScrollbarBGColour]">scrollbar/scrollv.png</texturesliderbackground>
<!--Changed-->		<texturesliderbar border="4" colordiffuse="$VAR[ScrollbarUnFocusedColour]">scrollbar/scrollv.png</texturesliderbar>
<!--Changed-->		<texturesliderbarfocus border="4" colordiffuse="$VAR[ScrollbarFocusedColour]">scrollbar/scrollv.png</texturesliderbarfocus>
					<animation effect="fade" start="100" end="33" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
				</control>
			</control>
			<include>View_50_SidePoster</include>
		</control>
	</include>
	<include name="View_50_SidePoster">
		<control type="group" description="Poster">
			<!--<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>-->
			<left>SidePad</left>
			<top>PosterPad</top>
			<visible>!IsEmpty(ListItem.Icon)</visible>
			<control type="image">
				<top>PosterH</top>
				<width>PosterW</width>
				<height>PosterH</height>
				<fadetime>100</fadetime>
				<aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
				<texture flipy="true" diffuse="diffuse/listposter-ref.png" background="true">$VAR[PosterImage]</texture>
				<visible>Skin.HasSetting(show.reflections)</visible>
			</control>
			<control type="image">
				<centertop>PosterH</centertop>
				<width>PosterW</width>
				<height>48</height>
				<aspectratio>stretch</aspectratio>
				<texture>diffuse/shadowspot.png</texture>
				<visible>!Skin.Hassetting(views.cases)</visible>
			</control>
			<control type="image">
				<width>PosterW</width>
				<height>PosterH</height>
				<texture border="5" colordiffuse="FF181818">common/box.png</texture>
				<visible>!Skin.Hassetting(views.cases)</visible>
			</control>
			<control type="image">
				<width>PosterW</width>
				<height>PosterH</height>
				<fadetime>100</fadetime>
				<aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
				<texture diffuse="diffuse/listposter.png" background="true">$VAR[PosterImage]</texture>
				<visible>!Skin.Hassetting(views.cases)</visible>
			</control>
			<control type="image">
				<left>11</left>
				<top>11</top>
				<width>411</width>
				<height>627</height>
				<aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
				<texture background="true" diffuse="diffuse/listposter.png">$VAR[PosterImage]</texture>
				<visible>Skin.Hassetting(views.cases) + !Skin.Hassetting(views.clearcases)</visible>
			</control>
			<control type="image">
				<width>PosterW</width>
				<height>PosterH</height>
				<fadetime>100</fadetime>
				<aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
				<texture background="true" diffuse="diffuse/listposter.png">$VAR[PosterImage]</texture>
				<visible>Skin.Hassetting(views.cases) + Skin.Hassetting(views.clearcases)</visible>
			</control>
			<control type="image">
				<posx>-75</posx>
				<posy>-50</posy>
				<width>527</width>
				<height>730</height>
				<fadetime>100</fadetime>
				<texture background="true">boxes/$VAR[ShowcaseCasePathVar]/$VAR[GlobalCaseVar]</texture>
				<aspectratio align="center" aligny="top">stretch</aspectratio>
				<bordersize>2</bordersize>
				<visible>Skin.Hassetting(views.cases) + Skin.Hassetting(views.clearcases)</visible>
			</control>
			<control type="image">
				<posx>-70</posx>
				<posy>-50</posy>
				<width>527</width>
				<height>730</height>
				<fadetime>100</fadetime>
				<texture background="true">boxes/$VAR[ShowcaseCasePathVar]/$VAR[GlobalCaseVar]</texture>
				<aspectratio align="center" aligny="top">stretch</aspectratio>
				<bordersize>2</bordersize>
				<visible>Skin.Hassetting(views.cases) + !Skin.Hassetting(views.clearcases)</visible>
			</control>
			<control type="image">
				<left>-24</left>
				<top>-24</top>
				<width>PosterShadowW</width>
				<height>PosterShadowH</height>
				<texture border="32">common/shadow-24.png</texture>
				<visible>!Skin.Hassetting(views.cases)</visible>
			</control>
		</control>
	</include>
	<include name="View_50_SidePoster_Square">
		<control type="group" description="Poster">
			<left>SidePad</left>
			<top>PosterPad</top>
			<visible>!IsEmpty(ListItem.Icon)</visible>
			<control type="image">
				<top>PosterH</top>
				<width>PosterH</width>
				<height>PosterH</height>
				<fadetime>100</fadetime>
				<aspectratio align="center" aligny="center" scalediffuse="false">keep</aspectratio>
				<texture flipy="true" diffuse="diffuse/listposter-ref.png" background="true">$VAR[PosterImage]</texture>
				<visible>Skin.HasSetting(show.reflections)</visible>
			</control>
			<control type="image">
				<centertop>PosterH</centertop>
				<width>PosterH</width>
				<height>48</height>
				<aspectratio>stretch</aspectratio>
				<texture>diffuse/shadowspot.png</texture>
			</control>
			<control type="image">
				<width>PosterH</width>
				<height>PosterH</height>
				<texture border="5" colordiffuse="FF181818">common/box.png</texture>
			</control>
			<control type="image">
				<width>PosterH</width>
				<height>PosterH</height>
				<fadetime>100</fadetime>
				<aspectratio align="center" aligny="center" scalediffuse="false">keep</aspectratio>
				<texture diffuse="diffuse/listposter.png" background="true">$VAR[PosterImage]</texture>
			</control>
			<control type="image">
				<left>-24</left>
				<top>-24</top>
				<width>PosterShadowH</width>
				<height>PosterShadowH</height>
				<texture border="32">common/shadow-24.png</texture>
			</control>
		</control>
	</include>
	<include name="View_50_List_Square">
		<description>List View (id=50)</description>
		<control type="group">
			<include>Animation.Common</include>
			<visible>Control.IsVisible(50)</visible>
			<!--<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>-->
			<control type="group">
				<control type="list" id="50">
					<top>PosterPad</top>
					<height>PosterH</height>
					<left>ListSquareX</left>
					<right>SidePad</right>
					<onleft condition="!Skin.HasSetting(global.kioskmode)">9000</onleft>
					<onright>60</onright>
					<onup>50</onup>
					<ondown>50</ondown>
					<pagecontrol>60</pagecontrol>
					<viewtype label="535">list</viewtype>
					<!--<visible>StringCompare(Window(Home).Property(SkinHelper.ForcedView),50) | IsEmpty(Window(Home).Property(SkinHelper.ForcedView))</visible>-->
					<scrolltime>200</scrolltime>
					<itemlayout width="ListSquareW" height="64">
						<include>50itemlayout_square</include>
					</itemlayout>
					<focusedlayout width="ListSquareW" height="64">
						<control type="group">
							<visible>Control.HasFocus(50)</visible>
							<include>50focuslayout_square</include>
						</control>
						<control type="group">
							<visible>!Control.HasFocus(50)</visible>
							<include>50itemlayout_square</include>
						</control>
					</focusedlayout>
				</control>
				<include>Furniture_Scrollbar</include>
			</control>
			<include>View_50_SidePoster_Square</include>
		</control>
	</include>
	<include name="View_550_List">
		<description>List View (id=550)</description>
		<control type="group">
			<include>Animation.Common</include>
			<visible>Control.IsVisible(550)</visible>
			<!--<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>-->
			<control type="group">
				<control type="list" id="550">
					<visible>![Container.Content(musicvideos) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(actors) | Container.Content(sets) | Container.Content(seasons) | [Container.Content(files) + !substring(Container.FolderPath,plugin://,left) + !stringcompare(Container.FolderPath,library://video/movies/) + !stringcompare(Container.FolderPath,library://video/tvshows/) + !stringcompare(Container.FolderPath,special://videoplaylists/)] | [Container.Content(episodes) + !substring(Container.FolderPath,plugin://,left)]]</visible>
					<top>PosterPad</top>
					<height>PosterH</height>
					<left>ListSquareX</left>
					<right>SidePad</right>
					<onleft condition="!Skin.HasSetting(global.kioskmode)">9000</onleft>
					<onright>60</onright>
					<onup>550</onup>
					<ondown>550</ondown>
					<pagecontrol>60</pagecontrol>
					<viewtype label="535">list</viewtype>
					<!--<visible>StringCompare(Window(Home).Property(SkinHelper.ForcedView),550) | IsEmpty(Window(Home).Property(SkinHelper.ForcedView))</visible>-->
					<scrolltime>200</scrolltime>
					<itemlayout width="ListSquareW" height="64">
						<include>50itemlayout_square</include>
					</itemlayout>
					<focusedlayout width="ListSquareW" height="64">
						<control type="group">
							<visible>Control.HasFocus(550)</visible>
							<include>50focuslayout_square</include>
						</control>
						<control type="group">
							<visible>!Control.HasFocus(550)</visible>
							<include>50itemlayout_square</include>
						</control>
					</focusedlayout>
				</control>
				<include>Furniture_Scrollbar</include>
			</control>
			<control type="group" description="Poster">
				<left>SidePad</left>
				<top>PosterPad</top>
				<control type="image">
					<top>PosterH</top>
					<width>PosterH</width>
					<height>PosterH</height>
					<fadetime>100</fadetime>
					<aspectratio align="center" aligny="center" scalediffuse="false">keep</aspectratio>
					<texture flipy="true" diffuse="diffuse/listposter-ref.png" background="true">$VAR[PosterImage]</texture>
					<visible>Skin.HasSetting(show.reflections)</visible>
				</control>
				<control type="image">
					<centertop>PosterH</centertop>
					<width>PosterH</width>
					<height>48</height>
					<aspectratio>stretch</aspectratio>
					<texture>diffuse/shadowspot.png</texture>
				</control>
				<control type="image">
					<width>PosterH</width>
					<height>PosterH</height>
					<texture border="5" colordiffuse="FF181818">common/box.png</texture>
				</control>
				<control type="image">
					<width>PosterH</width>
					<height>PosterH</height>
					<fadetime>100</fadetime>
					<aspectratio align="center" aligny="center" scalediffuse="false">keep</aspectratio>
					<texture diffuse="diffuse/listposter.png" background="true">$VAR[PosterImage]</texture>
				</control>
				<control type="image">
					<left>-24</left>
					<top>-24</top>
					<width>PosterShadowH</width>
					<height>PosterShadowH</height>
					<texture border="32">common/shadow-24.png</texture>
				</control>
			</control>
		</control>
	</include>
	<include name="50focuslayout">
		<control type="button">
			<texturefocus>-</texturefocus>
			<texturenofocus>-</texturenofocus>
			<onfocus condition="Container.Content(movies)">ClearProperty(TVShowID,home)</onfocus>
			<onfocus condition="Container.Content(tvshows)">SetProperty(TVShowID,$INFO[ListItem.DBID],home)</onfocus>
		</control>
		<control type="image">
			<width>100%</width>
			<height>100%</height>
			<texture border="8" colordiffuse="$VAR[ViewsSelectHighlight]">common/box.png</texture><!--Changed from Dark1-->
		</control>
		<control type="label">
			<posx>30</posx>
			<width>200</width>
			<font>Small</font>
			<aligny>center</aligny>
			<height>64</height>
			<textcolor>Light1</textcolor>
			<selectedcolor>Light1</selectedcolor>
			<label>$VAR[LabelYear]</label>
			<visible>Container.Content(movies)</visible>
		</control>
		<control type="label">
			<posx>120</posx>
			<width>auto</width>
			<aligny>center</aligny>
			<height>64</height>
			<font>SmallBold</font>
			<textcolor>Light1</textcolor>
			<selectedcolor>Light1</selectedcolor>
			<label>$INFO[ListItem.Label]</label>
			<animation effect="slide" start="0" end="-90" time="0" condition="!Container.Content(movies)">Conditional</animation>
			<visible>!Container.Content(episodes) + !Container.Content(tvshows)</visible>
		</control>
		<control type="label">
			<posx>30</posx>
			<width>auto</width>
			<aligny>center</aligny>
			<height>64</height>
			<font>SmallBold</font>
			<textcolor>Light1</textcolor>
			<selectedcolor>Light1</selectedcolor>
			<label>$INFO[ListItem.Label]</label>
			<visible>Container.Content(episodes) | Container.Content(tvshows)</visible>
		</control>
		<control type="label">
			<right>154</right>
			<width>500</width>
			<aligny>center</aligny>
			<height>64</height>
			<align>right</align>
			<font>Small</font>
			<textcolor>Light1</textcolor>
			<selectedcolor>Light1</selectedcolor>
			<label>$VAR[LabelDuration]</label>
		</control>
		<control type="label">
			<centerright>110</centerright>
			<centerright>32</centerright>
			<centertop>32</centertop>
			<width>32</width>
			<height>32</height>
			<font>symbolview</font>
			<label>$VAR[PercentWatchedLabel]</label>
			<textcolor>$VAR[ColourHighlight2]</textcolor>
			<visible>!stringcompare(ListItem.Label,..)</visible>                   
			<animation effect="slide" start="0" end="64" time="0" condition="Container.Content(Seasons)">Conditional</animation>
		</control>	
		<control type="label">
			<right>30</right>
			<width>500</width>
			<aligny>center</aligny>
			<height>64</height>
			<align>right</align>
			<font>Small</font>
			<textcolor>Light1</textcolor>
			<selectedcolor>Light1</selectedcolor>
			<label fallback="0.0">$INFO[ListItem.Rating]</label>
			<visible>!stringcompare(ListItem.Label,..)</visible>
			<visible>!Container.Content(seasons)</visible>
		</control>
	</include>
	<include name="50itemlayout">
		<control type="label">
			<posx>30</posx>
			<width>200</width>
			<font>Small</font>
			<aligny>center</aligny>
			<height>64</height>
			<label>$VAR[LabelYear]</label>
			<textcolor>Dark1</textcolor>
			<selectedcolor>Dark1</selectedcolor>
			<visible>Container.Content(movies)</visible>
		</control>
		<control type="label">
			<posx>120</posx>
			<width>auto</width>
			<aligny>center</aligny>
			<height>64</height>
			<font>SmallBold</font>
			<label>$INFO[ListItem.Label]</label>
			<textcolor>Dark1</textcolor>
			<selectedcolor>Dark1</selectedcolor>
			<animation effect="slide" start="0" end="-90" time="0" condition="!Container.Content(movies)">Conditional</animation>
			<visible>!Container.Content(episodes) + !Container.Content(tvshows)</visible>
		</control>
		<control type="label">
			<posx>30</posx>
			<width>auto</width>
			<aligny>center</aligny>
			<height>64</height>
			<font>SmallBold</font>
			<label>$INFO[ListItem.Label]</label>
			<textcolor>Dark1</textcolor>
			<selectedcolor>Dark1</selectedcolor>
			<visible>Container.Content(episodes) | Container.Content(tvshows)</visible>
		</control>
		<control type="label">
			<right>154</right>
			<width>500</width>
			<aligny>center</aligny>
			<height>64</height>
			<align>right</align>
			<font>Small</font>
			<textcolor>Dark1</textcolor>
			<selectedcolor>Dark1</selectedcolor>
			<label>$VAR[LabelDuration]</label>
		</control>
		<control type="label">
			<centerright>110</centerright>
			<centerright>32</centerright>
			<centertop>32</centertop>
			<width>32</width>
			<height>32</height>
			<font>symbolview</font>
			<label>$VAR[PercentWatchedLabel]</label>
			<textcolor>$VAR[ColourHighlight2]</textcolor>
			<selectedcolor>$VAR[UnWatchedHighlightColor]</selectedcolor>
            <visible>!stringcompare(ListItem.Label,..)</visible>                       
			<animation effect="slide" start="0" end="64" time="0" condition="Container.Content(Seasons)">Conditional</animation> 	
		</control>
		<control type="label">
			<right>30</right>
			<width>500</width>
			<aligny>center</aligny>
			<height>64</height>
			<align>right</align>
			<font>Small</font>
			<textcolor>Dark1</textcolor>
			<selectedcolor>Dark1</selectedcolor>
			<label fallback="0.0">$INFO[ListItem.Rating]</label>
			<visible>!stringcompare(ListItem.Label,..)</visible>
			<visible>!Container.Content(seasons)</visible>
		</control>
	</include>
	<include name="50itemlayout_square">
		<control type="image">
			<left>25</left>
			<centertop>32</centertop>
			<width>32</width>
			<height>32</height>
			<aspectratio aligny="top">keep</aspectratio>
			<texture colordiffuse="Dark1">indicator/playlist.png</texture>
			<visible>ListItem.IsPlaying</visible>
		</control>
		<control type="label">
			<posx>30</posx>
			<width>auto</width>
			<aligny>center</aligny>
			<height>64</height>
			<font>SmallBold</font>
			<label>$INFO[ListItem.Label]</label>
			<textcolor>Dark1</textcolor>
			<selectedcolor>Dark1</selectedcolor>
			<visible>!ListItem.IsPlaying</visible>
		</control>
		<control type="label">
			<posx>78</posx>
			<width>auto</width>
			<aligny>center</aligny>
			<height>64</height>
			<font>SmallBold</font>
			<label>$INFO[ListItem.Label]</label>
			<textcolor>Dark1</textcolor>
			<selectedcolor>Dark1</selectedcolor>
			<visible>ListItem.IsPlaying</visible>
		</control>
		<control type="label">
			<right>30</right>
			<width>500</width>
			<aligny>center</aligny>
			<height>64</height>
			<align>right</align>
			<font>Small</font>
			<textcolor>Dark1</textcolor>
			<selectedcolor>Dark1</selectedcolor>
			<label>$INFO[ListItem.Label2]</label>
		</control>
	</include>
	<include name="50focuslayout_square">
		<control type="image">
			<width>100%</width>
			<height>100%</height>
			<texture border="8" colordiffuse="$VAR[ViewsSelectHighlight]">common/box.png</texture><!--Changed from "Dark1"-->
		</control>
		<control type="image">
			<left>25</left>
			<centertop>32</centertop>
			<width>32</width>
			<height>32</height>
			<aspectratio aligny="top">keep</aspectratio>
			<texture colordiffuse="Light1">indicator/playlist.png</texture>
			<visible>ListItem.IsPlaying</visible>
		</control>
		<control type="label">
			<posx>30</posx>
			<width>auto</width>
			<aligny>center</aligny>
			<height>64</height>
			<font>SmallBold</font>
			<label>$INFO[ListItem.Label]</label>
			<textcolor>Light1</textcolor>
			<selectedcolor>Light1</selectedcolor>
			<visible>!ListItem.IsPlaying</visible>
		</control>
		<control type="label">
			<posx>78</posx>
			<width>auto</width>
			<aligny>center</aligny>
			<height>64</height>
			<font>SmallBold</font>
			<label>$INFO[ListItem.Label]</label>
			<textcolor>Light1</textcolor>
			<selectedcolor>Light1</selectedcolor>
			<visible>ListItem.IsPlaying</visible>
		</control>
		<control type="label">
			<right>30</right>
			<width>500</width>
			<aligny>center</aligny>
			<height>64</height>
			<align>right</align>
			<font>Small</font>
			<textcolor>Light1</textcolor>
			<selectedcolor>Light1</selectedcolor>
			<label>$INFO[ListItem.Label2]</label>
		</control>
	</include>
</includes>